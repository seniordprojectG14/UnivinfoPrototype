{"version":3,"sources":["components/postComponents/PostList.module.css","components/Navbar/MainNavigation.module.css","components/ui/Card.module.css","components/ui/Card.js","components/SingleChat.js","constants/actionTypes.js","components/postComponents/styles.js","components/postComponents/PersonalPost.js","actions/posts.js","components/postComponents/MyPost.js","components/postComponents/PostItem.js","components/postComponents/PostChain.js","components/postComponents/PostList.js","components/postComponents/PostForm.js","components/postComponents/NewPost.js","components/Navbar/styles.js","components/Navbar/Navbar.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","Context/ChatProvider.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/Homepage.js","components/Home/Home.js","App.js","reportWebVitals.js","reducers/index.js","reducers/posts.js","index.js","components/postComponents/PostItem.module.css","components/postComponents/NewPost.module.css"],"names":["module","exports","Card","socket","selectedChatCompare","props","className","classes","card","children","CREATE","DELETE","FETCH_ALL","makeStyles","theme","root","margin","spacing","paper","padding","form","display","flexWrap","justifyContent","fileInput","width","buttonSubmit","marginBottom","PersonalPost","color","palette","text","primary","post","dispatch","setCurrentId","user","setUser","useDispatch","classstyles","useStyles","item","content","title","details","Typography","variant","component","max","min","wanttolive","description","Button","onClick","e","id","preventDefault","console","log","_id","api","type","payload","message","actions","moment","createdAt","fromNow","MyPost","currentId","posts","useSelector","state","React","useState","counter","setCounter","postList","setPostList","username","setUserName","useEffect","JSON","parse","localStorage","getItem","map","stringify","current","list","Alert","severity","Paper","align","PostItem","proplist","CardMedia","media","image","photo","address","style","textalign","paddingLeft","src","photos","height","alt","PostChain","college","firstAddress","pclist","setPcist","lookingfor","maxval","minval","typeval","bedroomsval","PostList","PostForm","find","postData","setPostData","setImage","clear","handleSubmit","headers","formdata","FormData","i","length","append","name","axios","data","onSubmit","control","htmlFor","value","onChange","target","multiple","event","file","files","accept","rows","NewPost","selectedFile","appBar","borderRadius","flexDirection","alignItems","heading","textDecoration","marginLeft","toolbar","profile","userName","brandContainer","purple","getContrastText","deepPurple","backgroundColor","Navbar","navigate","useNavigate","classess","useLocation","stringifiedPerson","header","logo","to","logout","removeItem","Link","isSameSenderMargin","messages","m","userId","sender","isSameSender","undefined","isLastMessage","isSameUser","getSender","loggedUser","users","ProfileModal","useDisclosure","isOpen","onOpen","onClose","d","base","icon","size","isCentered","h","fontSize","fontFamily","flexDir","boxSize","pic","md","ChatContext","createContext","ChatState","useContext","ChatProvider","selectedChat","setSelectedChat","notification","setNotification","chats","setChats","userInfo","Provider","ScrollableChat","label","placement","hasArrow","mt","mr","cursor","marginTop","maxWidth","UserBadgeItem","handleFunction","admin","px","py","mb","colorScheme","pl","UserListItem","bg","_hover","background","w","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","loading","setLoading","renameloading","setRenameLoading","toast","useToast","handleSearch","query","config","Authorization","token","get","status","duration","isClosable","position","handleRename","put","chatId","chatName","response","handleAddUser","user1","u","groupAdmin","handleRemove","pb","placeholder","ml","isLoading","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","key","io","on","newMessageRecieved","chat","includes","isGroupChat","toUpperCase","p","overflowY","alignSelf","onKeyDown","isRequired","options","lastTypingTime","Date","getTime","setTimeout","Chatbox","borderWidth","ChatLoading","GroupChatModal","selectedUsers","setSelectedUsers","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","accessChat","c","count","effect","Effect","SCALE","notif","n","as","borderBottomWidth","Chatpage","Login","show","setShow","setUsername","password","setPassword","submitHandler","setItem","Signup","handleClick","setName","confirmpassword","setConfirmpassword","setPic","picLoading","setPicLoading","pics","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","Homepage","maxW","centerContent","isFitted","Home","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f8520f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PostList_list__3uec8\",\"main\":\"PostList_main__3WuIU\",\"space\":\"PostList_space__2cSJ7\",\"search\":\"PostList_search__aUt2v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__1h0jH\",\"logo\":\"MainNavigation_logo__2PsxD\",\"active\":\"MainNavigation_active__3VDdG\",\"badge\":\"MainNavigation_badge__295Ki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3_jzl\"};","import React from 'react';\nimport classes from './Card.module.css';\n\nfunction Card(props) {\n  return <div className={classes.card}>{props.children}</div>;\n}\n\nexport default Card;\n","import { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\n\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\nconst ENDPOINT = 'https://univinfomation.herokuapp.com'; \nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n\n\n  const sendMessage = async (event) => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  \n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n\n    selectedChatCompare = selectedChat;\n    // eslint-disable-next-line\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            <IconButton\n              d={{ base: \"flex\", md: \"none\" }}\n              icon={<ArrowBackIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n            {messages &&\n              (!selectedChat.isGroupChat ? (\n                <>\n                  {getSender(user, selectedChat.users)}\n                  <ProfileModal\n                    user={getSenderFull(user, selectedChat.users)}\n                  />\n                </>\n              ) : (\n                <>\n                  {selectedChat.chatName.toUpperCase()}\n                  <UpdateGroupChatModal\n                    fetchMessages={fetchMessages}\n                    fetchAgain={fetchAgain}\n                    setFetchAgain={setFetchAgain}\n                  />\n                </>\n              ))}\n          </Text>\n          <Box\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    // height={50}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                variant=\"filled\"\n                bg=\"#E0E0E0\"\n                placeholder=\"Enter a message..\"\n                value={newMessage}\n                onChange={typingHandler}\n              />\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","export const CREATE = 'CREATE';\n//export const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\nexport const FETCH_ALL = 'FETCH_ALL';\n//export const LIKE = 'LIKE';\n\nexport const AUTH = 'AUTH';\nexport const LOGOUT = 'LOGOUT';","\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));\n","import React,{useEffect} from 'react';\nimport Card from '../ui/Card';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\nimport classes from './PostItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { deletePost } from '../../actions/posts';\nimport useStyles from './styles.js';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyless = makeStyles((theme) => ({\n    root: {\n      color: theme.palette.text.primary,\n    },\n  }));\n\n\n\n  const PersonalPost = ({ post, setCurrentId, user, setUser }) => {\n  const dispatch = useDispatch();\n  const classstyles = useStyles();\n  // const user = JSON.parse(localStorage.getItem('name'));\n  \n \n\n  const handleOnSubmit = (e) =>{\n    e.preventDefault();\n    console.log(post._id, \" post id\");\n    dispatch(deletePost({id: post._id}));\n\n  }\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <div className={classes.content}>\n          <h3>{post.title}</h3>\n          <div className={classstyles.details}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.max}</Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.max}</Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.min}</Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.wanttolive}</Typography>\n            </div>\n          <p>{post.description}</p>\n        </div>\n        <Button onClick={handleOnSubmit}>\n            <DeleteIcon/>\n        </Button>\n        <div className={classes.actions}>\n        <Button>Chat</Button>\n        <p variant=\"body2\">{moment(post.createdAt).fromNow()}</p>\n       \n        </div>\n      </Card>\n    </li>\n  );\n}\n\nexport default PersonalPost;\n","import { FETCH_ALL, CREATE, DELETE} from '../constants/actionTypes';\nimport axios from 'axios';\nimport * as api from '../api/index.js';\n\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n    // const { data } = await api.fetchPosts();\n    const { data } = await axios.get(\n      \"/posts\",\n      {},\n      config\n    );\n    console.log(JSON.stringify(data) + \" data both\")\n    dispatch({ type: FETCH_ALL, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    //console.log(JSON.stringify(post)+ \"createPost JSON.stringify(post)\");\n    const { data } = await api.createPost(post);\n    ///console.log(JSON.stringify(data)+ \"createPost JSON.stringify(data)\");\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getUsers = () => async (dispatch) => {\n  try {\n    \n    const { data } = await api.fetchUsers();\n    \n\n    dispatch({ type: FETCH_ALL, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n/*\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n*/\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n   /// console.log(\"deleting post with id \" + id.id);\n    await api.deletePost(id.id);\n    // console.log(\"deleting post with id \" + id.id);\n    dispatch({ type: DELETE, payload: id.id });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n\n","import React,{useState,useEffect} from 'react';\nimport classes from './PostList.module.css';\nimport { Paper,Typography } from '@material-ui/core';\nimport PersonalPost from './PersonalPost';\nimport Alert from '@material-ui/lab/Alert';\n\nimport { useSelector } from 'react-redux';\n\n\n\n  const MyPost = ({ currentId,setCurrentId, user, setUser }) => {\n  const posts = useSelector((state) => state.posts);\n  const [counter, setCounter]= React.useState(false);\n  const [postList, setPostList] = useState([]);\n  const [hasError, setError] = React.useState(false);\n  const [username, setUserName] = useState(\"\");\n  useEffect(async () => {\n    setUserName(\n      await JSON.parse(localStorage.getItem(\"userInfo\")\n      )\n    );\n  }, []);\n\n  \n\n  useEffect(() => {\n    {posts.map((post) => {\n      console.log(JSON.stringify(post) + \" JSON.stringify(post)\");\n        if(post.username === user){\n            setPostList(current => [...current, post]);\n            setCounter(true);\n    }\n    else{\n        return <div></div>;\n    }\n})}\n  }, []);\n\n  \n  if (!username) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to see your listing.\n        </Typography>\n      </Paper>\n    );\n  }\n  \n  return (\n    \n<>\n    { counter ? (\n        <ul className={classes.list}>\n        {postList.map((post) => (\n          <PersonalPost\n            post={post} \n            setCurrentId={setCurrentId}\n          />\n        ))}\n      </ul>\n        )\n    :\n    (\n        <Alert severity=\"info\">You have no Posts yet.  Add your own posts by going to the \"Add Posts\" page</Alert>\n    )}\n</>\n  );\n}\n\n\nexport default MyPost;\n","import React,{useEffect, useState} from 'react';\nimport Card from '../ui/Card';\nimport { CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\nimport classes from './PostItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport useStyles from './styles.js';\n\n\n\n\nconst PostItem = ({ post, setCurrentId, user, setUser,proplist }) => {\n  const classstyles = useStyles();\n  \n\n    return(\n      <li className={classes.item}>\n      <Card>\n      <CardMedia className={classes.media} image={post.photo || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.photo} />\n        <div className={classes.content}>\n          <h3>addres: {post.address}</h3>\n          <div className={classstyles.details}>\n        <div style={{textalign: 'center',\n            paddingLeft: '480px'}}>\n        <img src={post.photos[0]}  height={'200px'} width={'300px'} alt=\"BigCo Inc. logo\"/>\n        </div>\n    \n    \n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">username:{post.username}</Typography>\n            </div>\n          <p>description: {post.description}</p>\n        </div>\n        <div className={classes.actions}>\n        <Button>Chat</Button>\n        <p variant=\"body2\">{moment(post.createdAt).fromNow()}</p>\n       \n        </div>\n      </Card>\n    </li>\n\n    );\n    }\n    \n\nexport default PostItem;","import React,{useEffect, useState} from 'react';\nimport PostItem from './PostItem';\n\n\n\n\n  const PostChain = ({college, firstAddress, address, pclist, setPcist, list, counter, lookingfor, maxval, minval, typeval, bedroomsval, post, setCurrentId, user, setUser,proplist }) => {\n\n\n \n\n\n\n        return(\n            <PostItem post={post} setCurrentId={setCurrentId} user={user} setUser={setUser}/>  \n        )\n\n  \n}\n\nexport default PostChain;","import React,{useRef,useState,useEffect} from 'react';\nimport classes from './PostList.module.css';\nimport PostChain from './PostChain'\nimport { useSelector } from 'react-redux';\n\n\n\n\n  const PostList = ({ setCurrentId, user }) => {\n    const posts = useSelector((state) => state.posts);\n   \n  return (\n\n    <div className=\"main\">\n<ul className={classes.list}>\n  {posts?.map((post) => {\n     return(\n       <PostChain  post={post}  setCurrentId={setCurrentId} />\n   );\n  })}\n</ul>\n    </div>\n  );\n}\n\nexport default PostList;\n","import React, { useState, useEffect } from 'react';\nimport classes from './NewPost.module.css';\n\n\n\nimport{ useSelector } from 'react-redux';\n\nimport axios from 'axios';\n\n\n\n\n    \n\n\n\nconst PostForm = ({ currentId, setCurrentId, user, setUser}) => {\n    const post = useSelector((state) => (currentId ? state.posts.find((description) => description._id === currentId) : null));\n    const [postData, setPostData] = useState({address: '', photos: '', description: '', username: ''});\n    const [image, setImage] = React.useState(null);\n\n    \n      useEffect(() => {\n        if (post) setPostData(post);\n      }, [post]);\n\n   \n    const clear = () => {\n      setCurrentId(0);\n      setPostData({address: '', photos: '', description: '', username: ''});\n    };\n  \n \n    const fileSelected = event => {\n      const file = event.target.files\n      setImage(file)\n    }\n\n      \n    \n  \n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      };\n      console.log(\"submitting\");\n\n      \n         const formdata = new FormData();\n        \n         for ( let i = 0; i < image?.length; i++ ) {\n          formdata.append( \"imagecropped\", image[ i ], image[ i ].name );\n        }\n        console.log(JSON.stringify(image) + \"formdata pics\");\n        formdata.append(\"len\", image?.length);\n        formdata.append(\"address\", postData.address)\n        formdata.append(\"description\", postData.description)\n        formdata.append(\"username\", user?.username)\n         const {data} = await axios.post(\"/posts\", formdata, { headers: {\n\t\t\t\t\t'accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'multipart/form-data'\n\t\t\t\t}})\n        console.log(JSON.stringify(data) + \"data\")\n        \n      if (currentId === 0) {\n        \n        clear();\n      } else {\n        \n        clear();\n      }\n    };\n    \n\n    \n      \n     \n  \n\n    return(\n        <form className={classes.form} onSubmit={handleSubmit}>\n  <div className={classes.control}>\n    <label htmlFor='title'>address</label>\n    <input type='text' id='address' value={postData.address} onChange={(e) => setPostData({ ...postData, address: e.target.value})}/>\n  </div>\n  <div className={classes.control}>\n    <label >add photos</label>\n    <div>\n    <div className=\"container-buttons\">\n\n    <input multiple onChange={fileSelected} type=\"file\" accept=\"image/*\"></input>\n\n          \n              </div>\n          </div>\n  </div>\n  <div className={classes.control}>\n    <label htmlFor='description'>any other things to add</label>\n    <textarea id='description'  rows='5' value={postData.description} onChange={(e) => setPostData({ ...postData, description: e.target.value })}></textarea>\n  </div>\n  <div className={classes.actions}>\n    <button>Add post</button>\n  </div>\n</form>\n    );\n}\nexport default PostForm;","import React, { useState, useEffect } from 'react';\nimport Card from '../ui/Card';\nimport classes from './NewPost.module.css';\nimport { Typography, Paper,Button } from '@material-ui/core';\n\nimport InputBase from '@material-ui/core/InputBase';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport useStyles from './styles';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Post from './PostForm';\n\n\n\n\n\n\n\n\n\nconst NewPost = ({ currentId, setCurrentId, user, setUser }) => {\n  \n  const post = useSelector((state) => (currentId ? state.posts.find((description) => description._id === currentId) : null));\n\n  const [postData, setPostData] = useState({selectedFile: '', description: '', username: ''});\n\n  const [username, setUserName] = useState(\"\");\n  useEffect(async () => {\n    setUserName(\n      await JSON.parse(localStorage.getItem(\"userInfo\")\n      )\n    );\n  }, []);\n\n  \n  \n    useEffect(() => {\n      if (post) setPostData(post);\n    }, [post]);\n\n  if (!username) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign IIn to create your own memories and like other's memories.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  return (\n    <>\n      <Card>\n  <Post currentId={currentId} setCurrentId={setCurrentId} user={user} setUser={setUser}/>\n  </Card>\n  </>\n  );\n}\n\nexport default NewPost;\n","import { makeStyles } from '@material-ui/core/styles';\nimport { deepPurple } from '@material-ui/core/colors';\n\nexport default makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 15,\n    margin: '30px 0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px 50px',\n  },\n  heading: {\n    color: 'rgba(0,183,255, 1)',\n    textDecoration: 'none',\n  },\n  image: {\n    marginLeft: '15px',\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    width: '400px',\n  },\n  profile: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '400px',\n  },\n  userName: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  brandContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n}));\n","import React, { useState, useEffect } from 'react';\n\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\n\nimport classes from './MainNavigation.module.css'\n\nimport { Link, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n//import decode from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\n\nimport * as actionType from '../../constants/actionTypes';\nimport useStyles from './styles';\n\nconst Navbar = (props ) => {\n  const navigate = useNavigate()\n  const [username, setUserName] = useState(\"\");\n  useEffect(async () => {\n    setUserName(\n      await JSON.parse(localStorage.getItem(\"userInfo\")\n      )\n    );\n  }, [navigate]);\n  \n  const dispatch = useDispatch();\n  const location = useLocation();\n  \n  const classess = useStyles();\n  \n  const logout = () => {\n    dispatch({ type: actionType.LOGOUT });\n    //localStorage.setItem(\"userInfo\", JSON.stringify(\"\"));\n    localStorage.removeItem(\"userInfo\");\n    //props.setUser(undefined);\n   // props.history.push(\"/Auth\");\n    navigate(\"/Auth\")\n    \n  };\n\n  useEffect(() => {\n    console.log(username + \"user\");\n  }, []);\n  \n  \n// useEffect(() => {\n//     const token = props.user?.token;\n\n//     if (token) {\n//       const decodedToken = decode(token);\n\n//       if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n//     }\n\n//     props.setUser(JSON.parse(localStorage.getItem('name')));\n//   }, [location]);\n\nconst stringifiedPerson = localStorage.getItem(\"name\");\nconst personAsObjectAgain = JSON.parse(stringifiedPerson);\n\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>univinfo</div>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/Blog\">Post Page</Link>\n          </li>\n          <li>\n            <Link to=\"/NewPost\">Add Post</Link>\n          </li>\n          <li>\n            <Link to=\"/MyPost\">My Post</Link>\n          </li>\n          <li>\n            <Link to=\"/Chats\">Chat</Link>\n          </li>\n          {/* <li>\n            <Link to='/checkout'>checkout</Link>\n          </li> */}\n          <li>\n          \n          {username ? (\n          <div className={classess.profile}>\n            {/* <Avatar className={classess.purple} alt={user?.result.name} src={user?.result.imageUrl}>{user?.result.name.charAt(0)}</Avatar>\n            <Typography className={classess.userName} variant=\"h6\">{user?.result.name}</Typography> */}\n            <Button variant=\"contained\" className={classess.logout} color=\"secondary\" onClick={logout}>Logout</Button>\n          </div>\n        ) : (\n          \n          <Button component={Link} to=\"/Auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\n        )}\n          </li>\n\n\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default Navbar;","export const isSameSenderMargin = (messages, m, i, userId) => {\n  // console.log(i === messages.length - 1);\n\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n\nexport const getSender = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\n};\n\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  IconButton,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\nconst ProfileModal = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n      )}\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent h=\"410px\">\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {user.name}\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"150px\"\n              src={user.pic}\n              alt={user.name}\n            />\n            <Text\n              fontSize={{ base: \"28px\", md: \"30px\" }}\n              fontFamily=\"Work sans\"\n            >\n              username: {user.username}\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileModal;\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\n//import { useHistory } from \"react-router-dom\";\nimport { Navigate, useNavigate } from 'react-router-dom';\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n\n  //const history = useHistory();\n  const navigate = useNavigate()\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n  }, [navigate]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        setUser,\n        notification,\n        setNotification,\n        chats,\n        setChats,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: \"flex\" }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n            )}\n            <span\n              style={{\n                backgroundColor: `${\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\n                }`,\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",\n              }}\n            >\n              {m.content}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Badge } from \"@chakra-ui/layout\";\n\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\n  return (\n    <Badge\n      px={2}\n      py={1}\n      borderRadius=\"lg\"\n      m={1}\n      mb={2}\n      variant=\"solid\"\n      fontSize={12}\n      colorScheme=\"purple\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n    >\n      {user.name}\n      {admin === user._id && <span> (Admin)</span>}\n      <CloseIcon pl={1} />\n    </Badge>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nconst UserListItem = ({ handleFunction }) => {\n  const { user } = ChatState();\n\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"lg\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>username : </b>\n          {user.username}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n\n      console.log(data._id);\n      // setSelectedChat(\"\");\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleAddUser = async (user1) => {\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  return (\n    <>\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {selectedChat.chatName}\n          </ModalHeader>\n\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\n              {selectedChat.users.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  admin={selectedChat.groupAdmin}\n                  handleFunction={() => handleRemove(u)}\n                />\n              ))}\n            </Box>\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                ml={1}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n\n            {loading ? (\n              <Spinner size=\"lg\" />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => handleAddUser(user)}\n                />\n              ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\n              Leave Group\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","import { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport SingleChat from \"./SingleChat\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"68%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from \"@chakra-ui/layout\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst GroupChatModal = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const { user, chats, setChats } = ChatState();\n\n  const handleGroup = (userToAdd) => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const handleDelete = (delUser) => {\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n  };\n\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: \"Please fill all the feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(\n        `/api/chat/group`,\n        {\n          name: groupChatName,\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\n        },\n        config\n      );\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            Create Group Chat\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <FormControl>\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n              {selectedUsers.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => handleDelete(u)}\n                />\n              ))}\n            </Box>\n            {loading ? (\n              // <ChatLoading />\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 4)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleGroup(user)}\n                  />\n                ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\n              Create Chat\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModal;\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst MyChats = ({ fetchAgain }) => {\n  const [loggedUser, setLoggedUser] = useState();\n\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"31%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        My Chats\n        <GroupChatModal>\n          <Button\n            d=\"flex\"\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n            rightIcon={<AddIcon />}\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModal>\n      </Box>\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"white\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n              >\n                <Text>\n                  {!chat.isGroupChat\n                    ? getSender(loggedUser, chat.users)\n                    : chat.chatName}\n                </Text>\n                {chat.latestMessage && (\n                  <Text fontSize=\"xs\">\n                    <b>{chat.latestMessage.sender.name} : </b>\n                    {chat.latestMessage.content.length > 50\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                      : chat.latestMessage.content}\n                  </Text>\n                )}\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\n//import { useHistory } from \"react-router-dom\";\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport ChatLoading from \"../ChatLoading\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport ProfileModal from \"./ProfileModal\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    chats,\n    setChats,\n  } = ChatState();\n\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  //const history = useHistory();\n  const navigate = useNavigate()\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    navigate(\"/Auth\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n    console.log(userId);\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" onClick={onOpen}>\n            <i className=\"fas fa-search\"></i>\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n              Search User\n            </Text>\n          </Button>\n        </Tooltip>\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\n          univ info\n        </Text>\n        <div>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} />\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\n              <Avatar\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n              />\n            </MenuButton>\n            <MenuList>\n              <ProfileModal user={user}>\n                <MenuItem>My Profile</MenuItem>{\" \"}\n              </ProfileModal>\n              <MenuDivider />\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or username\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChat(user._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","import { Box } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport Chatbox from \"../components/Chatbox\";\nimport MyChats from \"../components/MyChats\";\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatpage = () => {\n  const [fetchAgain, setFetchAgain] = useState(false);\n  const { user } = ChatState();\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {user && <SideDrawer />}\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\n        {user && <MyChats fetchAgain={fetchAgain} />}\n        {user && (\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default Chatpage;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/react\";\n//import { useHistory } from \"react-router-dom\";\nimport { Navigate, useNavigate } from 'react-router-dom';\nconst Login = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n\n  //const history = useHistory();\n  const navigate = useNavigate()\n\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!username || !password) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n\n    // console.log(email, password);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user/login\",\n        { username, password },\n        config\n      );\n\n      // console.log(JSON.stringify(data));\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setLoading(false);\n      navigate(\"/blog\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <VStack spacing=\"10px\">\n      <FormControl id=\"username\" isRequired>\n        <FormLabel>username</FormLabel>\n        <Input\n          value={username}\n          // type=\"email\"\n          placeholder=\"username\"\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter password\"\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Login\n      </Button>\n      <Button\n        variant=\"solid\"\n        colorScheme=\"red\"\n        width=\"100%\"\n        onClick={() => {\n          setUsername(\"guest@example.com\");\n          setPassword(\"123456\");\n        }}\n      >\n        Get Guest User Credentials\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Login;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n//import { useHistory } from \"react-router\";\nimport { Navigate, useNavigate } from 'react-router-dom';\nconst Signup = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  //const history = useHistory();\n    const navigate = useNavigate()\n  const [name, setName] = useState();\n  const [username, setUsername] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const submitHandler = async () => {\n    setPicLoading(true);\n    if (!name || !username || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(name, username, password, pic);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        \"/api/user\",\n        {\n          name,\n          username,\n          password,\n          pic,\n        },\n        config\n      );\n      console.log(data);\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setPicLoading(false);\n      navigate(\"/blog\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n    }\n  };\n\n  const postDetails = (pics) => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(pics);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(data.url.toString());\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  return (\n    <VStack spacing=\"5px\">\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"username\" isRequired>\n        <FormLabel>username</FormLabel>\n        <Input\n          type=\"username\"\n          placeholder=\"username\"\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Confirm Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Confirm password\"\n            onChange={(e) => setConfirmpassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"pic\">\n        <FormLabel>Upload your Picture</FormLabel>\n        <Input\n          type=\"file\"\n          p={1.5}\n          accept=\"image/*\"\n          onChange={(e) => postDetails(e.target.files[0])}\n        />\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={picLoading}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Signup;\n","import {\n  Box,\n  Container,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\n//import { useHistory } from \"react-router\";\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport Login from \"../components/Authentication/Login\";\nimport Signup from \"../components/Authentication/Signup\";\n\nfunction Homepage() {\n  //const history = useHistory();\n  const navigate = useNavigate()\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n  }, [navigate]);\n\n  return (\n    <Container maxW=\"xl\" centerContent>\n      <Box\n        d=\"flex\"\n        justifyContent=\"center\"\n        p={3}\n        bg=\"white\"\n        w=\"100%\"\n        m=\"40px 0 15px 0\"\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n      >\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\">\n          univinfo\n        </Text>\n      </Box>\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\n        <Tabs isFitted variant=\"soft-rounded\">\n          <TabList mb=\"1em\">\n            <Tab>Login</Tab>\n            <Tab>Sign Up</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Login />\n            </TabPanel>\n            <TabPanel>\n              <Signup />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Homepage;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Grow, Grid, Button } from '@material-ui/core';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { getPosts } from '../../actions/posts';\nimport NewPost from '../postComponents/NewPost.js';\nimport PostList from '../postComponents/PostList.js';\n//import AllMeetupsPage from '../../pages/AllMeetups';\n//import Layout from '../layout/NewLayout';\nimport Navbar from '../Navbar/Navbar';\n//import Auth from '../Auth/Auth.js';\n//import { getUsers } from '../../actions/posts';\nimport MyPost from '../postComponents/MyPost';\n//import Chat from '../../pages/Chat';\nimport Chatpage from '../../Pages/Chatpage';\nimport Homepage from '../../Pages/Homepage';\n\n//import SetAvatar from '../SetAvatar';\n\n\n\nconst Home = (props ) => {\n  //const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"name\")));\n\n  const [username, setUserName] = useState(\"\");\n  useEffect(async () => {\n    setUserName(\n      await JSON.parse(localStorage.getItem(\"userInfo\")\n      )\n    );\n  }, []);\n  const [currentId, setCurrentId] = useState(0);\n  const dispatch = useDispatch();\n  \n  //  useEffect(() => {\n  //   dispatch(getUsers());\n  // }, [currentId, dispatch]);\n\n  useEffect(async() => {\n      dispatch(getPosts());\n  }, [currentId, dispatch]);\n  \n  \n\n  return (\n    \n    \n    \n    \n<div>\n            <Navbar user={username} setUser={setUserName} />\n            <Routes>\n\n              <Route path=\"Auth\" element={<Homepage />}/>  \n             <Route path=\"Blog\" element={<PostList currentId={props.currentId} setCurrentId={props.setCurrentId} user={username} setUser={setUserName}/>}/> \n            \n            <Route path=\"NewPost\" element={<NewPost currentId={props.currentId} setCurrentId={props.setCurrentId} user={username} setUser={setUserName}/>}/>\n           \n            <Route path=\"MyPost\" element={<MyPost currentId={props.currentId} setCurrentId={props.setCurrentId} user={username} setUser={setUserName}/>}/> \n            {/* <Route path=\"SetAvatar\" element={<SetAvatar/>}/> */}\n            <Route path= \"chats\" element={<Chatpage />} /> \n            </Routes>\n            </div>           \n             \n      \n      \n        \n      \n  );\n};\n\nexport default Home;\n","import React,{useState,useEffect} from \"react\";\nimport \"./App.css\";\n\nimport {BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport MyPost from \"./components/postComponents/MyPost\";\nimport PostList from \"./components/postComponents/PostList\";\nimport NewPost from \"./components/postComponents/NewPost\";\nimport Home from \"./components/Home/Home\";\nimport Homepage from \"./Pages/Homepage\";\nimport Navbar from \"./components/Navbar/Navbar\";\nfunction App() {\n\n  const [username, setUserName] = useState(\"\");\n  useEffect(async () => {\n    setUserName(\n      await JSON.parse(localStorage.getItem(\"userInfo\")\n      )\n    );\n  }, []);\n\n  \n  const [currentId, setCurrentId] = useState(0);\n  return (\n    <div className=\"App\">\n            <Routes>\n        {/* <Route path=\"/\" element={<Homepage />}/> */}\n      \n        <Route path=\"/*\" element={<Home currentId={currentId} setCurrentId={setCurrentId} />}/>\n\n\n        {/* <Route path=\"/Auth\" element={<Homepage />}/>  \n             <Route path=\"/Blog\" element={<PostList currentId={currentId} setCurrentId={setCurrentId} user={username} setUser={setUserName}/>}/> \n            \n            <Route path=\"/NewPost\" element={<NewPost currentId={currentId} setCurrentId={setCurrentId} user={username} setUser={setUserName}/>}/>\n           \n            <Route path=\"/MyPost\" element={<MyPost currentId={currentId} setCurrentId={setCurrentId} user={username} setUser={setUserName}/>}/>  */}\n      {/* <Route path=\"/chats\" element={<Chatpage />} /> */}\n      {/* <Route path=\"/Home/*\" element={<Home currentId={currentId} setCurrentId={setCurrentId} />}/>    */}\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\n\nimport posts from './posts';\n\nexport const reducers = combineReducers({ posts });\n","import { FETCH_ALL, CREATE, DELETE} from '../constants/actionTypes';\n\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    //case LIKE:\n    //  return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case CREATE:\n      return [...posts, action.payload];\n    //case UPDATE:\n    //  return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { reducers } from './reducers';\n\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n  <ChakraProvider>\n    <BrowserRouter>\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </BrowserRouter>\n  </ChakraProvider>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"PostItem_item__1Ei6G\",\"image\":\"PostItem_image__29Cln\",\"content\":\"PostItem_content__3lUkG\",\"actions\":\"PostItem_actions__1Q2Wp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewPost_form__13Wgk\",\"control\":\"NewPost_control__1MZL7\",\"actions\":\"NewPost_actions__tGvtD\"};"],"sourceRoot":""}