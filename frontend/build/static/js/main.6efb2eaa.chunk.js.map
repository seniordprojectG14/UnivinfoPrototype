{"version":3,"sources":["components/meetups/MeetupList.module.css","components/ui/Card.module.css","components/Navbar/MainNavigation.module.css","components/meetups/NewMeetupForm.module.css","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/Homepage.js","components/SingleChat.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","Context/ChatProvider.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","constants/actionTypes.js","api/index.js","actions/posts.js","components/ui/Card.js","components/meetups/styles.js","components/meetups/Scrolebar.js","components/meetups/Apartment.js","components/meetups/Selling.js","components/meetups/NewMeetupForm.js","components/meetups/MeetupItem.js","components/meetups/List.js","components/meetups/MeetupList.js","components/Navbar/styles.js","components/Navbar/Navbar.js","components/ui/CustomCard.js","components/meetups/PersonalPost.js","components/meetups/MyPost.js","components/Home/Home.js","App.js","reportWebVitals.js","reducers/index.js","reducers/posts.js","index.js","components/meetups/MeetupItem.module.css"],"names":["module","exports","Login","useState","show","setShow","toast","useToast","email","setEmail","password","setPassword","loading","setLoading","navigate","useNavigate","submitHandler","title","status","duration","isClosable","position","config","headers","axios","post","data","localStorage","setItem","JSON","stringify","description","response","message","spacing","id","isRequired","value","type","placeholder","onChange","e","target","size","width","h","onClick","colorScheme","style","marginTop","isLoading","variant","Signup","handleClick","name","setName","confirmpassword","setConfirmpassword","pic","setPic","picLoading","setPicLoading","console","log","p","accept","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","Homepage","socket","selectedChatCompare","useEffect","parse","getItem","maxW","centerContent","d","justifyContent","bg","w","m","borderRadius","borderWidth","fontSize","fontFamily","isFitted","mb","isSameSenderMargin","messages","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","ProfileModal","user","children","useDisclosure","isOpen","onOpen","onClose","base","icon","isCentered","flexDir","alignItems","boxSize","src","alt","md","ChatContext","createContext","ChatState","useContext","ChatProvider","selectedChat","setSelectedChat","setUser","notification","setNotification","chats","setChats","userInfo","Provider","ScrollableChat","map","display","label","placement","hasArrow","mt","mr","cursor","backgroundColor","marginLeft","padding","maxWidth","content","UserBadgeItem","handleFunction","admin","px","py","pl","UserListItem","_hover","background","color","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","handleSearch","query","Authorization","token","get","handleRename","put","chatId","chatName","handleAddUser","user1","find","u","groupAdmin","handleRemove","flexWrap","pb","ml","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","key","io","on","newMessageRecieved","chat","includes","isGroupChat","toUpperCase","overflowY","alignSelf","margin","className","onKeyDown","options","marginBottom","lastTypingTime","Date","getTime","setTimeout","Chatbox","ChatLoading","height","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","accessChat","c","count","effect","Effect","SCALE","notif","n","as","Button","removeItem","borderBottomWidth","Chatpage","CREATE","DELETE","FETCH_ALL","API","create","baseURL","interceptors","request","use","req","deletePost","delete","createPost","dispatch","newPost","payload","Card","props","classes","card","makeStyles","theme","root","paper","form","fileInput","buttonSubmit","input","BootstrapInput","withStyles","palette","border","transition","transitions","join","borderColor","boxShadow","InputBase","useStyler","Apartment","currentId","setCurrentId","useSelector","state","posts","selectedFile","tags","username","max","min","wanttolive","postData","setPostData","React","selectval","setSelectval","roomatenum","setroomatenum","useDispatch","clear","useStyles","preventDefault","onSubmit","control","htmlFor","required","TextField","fullWidth","split","FormControl","Select","labelId","MenuItem","rows","actions","Selling","NewMeetupForm","isShowap","setIsShownap","isShowro","setIsShownro","isShowroap","setIsShownroap","Tooltip","arrow","Paper","Typography","align","MeetupItem","classstyles","item","details","component","tag","moment","createdAt","fromNow","List","filteredData","toLowerCase","list","Alert","severity","MeetupList","inputText","setInputText","lowerCase","appBar","flexDirection","heading","textDecoration","image","toolbar","profile","userName","brandContainer","purple","getContrastText","deepPurple","Navbar","setUserName","classess","useLocation","stringifiedPerson","header","logo","to","logout","Link","CustomCard","PersonalPost","text","primary","api","MyPost","counter","setCounter","postList","setPostList","current","Home","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6efb2eaa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"MeetupList_list__3WMaa\",\"main\":\"MeetupList_main__3Cuqs\",\"search\":\"MeetupList_search__STD3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3_jzl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__1h0jH\",\"logo\":\"MainNavigation_logo__2PsxD\",\"active\":\"MainNavigation_active__3VDdG\",\"badge\":\"MainNavigation_badge__295Ki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewMeetupForm_form__1Qsl3\",\"control\":\"NewMeetupForm_control__xuwh5\",\"actions\":\"NewMeetupForm_actions__tMvWn\"};","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/react\";\n//import { useHistory } from \"react-router-dom\";\nimport { Navigate, useNavigate } from 'react-router-dom';\nconst Login = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n\n  //const history = useHistory();\n  const navigate = useNavigate()\n\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!email || !password) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n\n    // console.log(email, password);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user/login\",\n        { email, password },\n        config\n      );\n\n      // console.log(JSON.stringify(data));\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setLoading(false);\n      navigate(\"/Home\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <VStack spacing=\"10px\">\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          value={email}\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter password\"\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Login\n      </Button>\n      <Button\n        variant=\"solid\"\n        colorScheme=\"red\"\n        width=\"100%\"\n        onClick={() => {\n          setEmail(\"guest@example.com\");\n          setPassword(\"123456\");\n        }}\n      >\n        Get Guest User Credentials\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Login;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n//import { useHistory } from \"react-router\";\nimport { Navigate, useNavigate } from 'react-router-dom';\nconst Signup = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  //const history = useHistory();\n    const navigate = useNavigate()\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const submitHandler = async () => {\n    setPicLoading(true);\n    if (!name || !email || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(name, email, password, pic);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        \"/api/user\",\n        {\n          name,\n          email,\n          password,\n          pic,\n        },\n        config\n      );\n      console.log(data);\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setPicLoading(false);\n      navigate(\"/Home\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n    }\n  };\n\n  const postDetails = (pics) => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(pics);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(data.url.toString());\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  return (\n    <VStack spacing=\"5px\">\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Confirm Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Confirm password\"\n            onChange={(e) => setConfirmpassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"pic\">\n        <FormLabel>Upload your Picture</FormLabel>\n        <Input\n          type=\"file\"\n          p={1.5}\n          accept=\"image/*\"\n          onChange={(e) => postDetails(e.target.files[0])}\n        />\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={picLoading}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Signup;\n","import {\n  Box,\n  Container,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\n//import { useHistory } from \"react-router\";\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport Login from \"../components/Authentication/Login\";\nimport Signup from \"../components/Authentication/Signup\";\n\nfunction Homepage() {\n  //const history = useHistory();\n  const navigate = useNavigate()\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n    //if (user) navigate(\"Home/chats\");\n  }, [navigate]);\n\n  return (\n    <Container maxW=\"xl\" centerContent>\n      <Box\n        d=\"flex\"\n        justifyContent=\"center\"\n        p={3}\n        bg=\"white\"\n        w=\"100%\"\n        m=\"40px 0 15px 0\"\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n      >\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\">\n          Talk-A-Tive\n        </Text>\n      </Box>\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\n        <Tabs isFitted variant=\"soft-rounded\">\n          <TabList mb=\"1em\">\n            <Tab>Login</Tab>\n            <Tab>Sign Up</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Login />\n            </TabPanel>\n            <TabPanel>\n              <Signup />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Homepage;\n","import { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\n\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\nconst ENDPOINT = \"https://apartmatesearch.herokuapp.com\"; // \"https://talk-a-tive.herokuapp.com\"; -> After deployment\nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  const sendMessage = async (event) => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n\n    selectedChatCompare = selectedChat;\n    // eslint-disable-next-line\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            <IconButton\n              d={{ base: \"flex\", md: \"none\" }}\n              icon={<ArrowBackIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n            {messages &&\n              (!selectedChat.isGroupChat ? (\n                <>\n                  {getSender(user, selectedChat.users)}\n                  <ProfileModal\n                    user={getSenderFull(user, selectedChat.users)}\n                  />\n                </>\n              ) : (\n                <>\n                  {selectedChat.chatName.toUpperCase()}\n                  <UpdateGroupChatModal\n                    fetchMessages={fetchMessages}\n                    fetchAgain={fetchAgain}\n                    setFetchAgain={setFetchAgain}\n                  />\n                </>\n              ))}\n          </Text>\n          <Box\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    // height={50}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                variant=\"filled\"\n                bg=\"#E0E0E0\"\n                placeholder=\"Enter a message..\"\n                value={newMessage}\n                onChange={typingHandler}\n              />\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","export const isSameSenderMargin = (messages, m, i, userId) => {\n  // console.log(i === messages.length - 1);\n\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n\nexport const getSender = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\n};\n\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  IconButton,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\nconst ProfileModal = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n      )}\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent h=\"410px\">\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {user.name}\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"150px\"\n              src={user.pic}\n              alt={user.name}\n            />\n            <Text\n              fontSize={{ base: \"28px\", md: \"30px\" }}\n              fontFamily=\"Work sans\"\n            >\n              Email: {user.email}\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileModal;\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\n//import { useHistory } from \"react-router-dom\";\nimport { Navigate, useNavigate } from 'react-router-dom';\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n\n  //const history = useHistory();\n  const navigate = useNavigate()\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n\n    if (!userInfo)  navigate(\"/\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [navigate]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        setUser,\n        notification,\n        setNotification,\n        chats,\n        setChats,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: \"flex\" }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n            )}\n            <span\n              style={{\n                backgroundColor: `${\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\n                }`,\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",\n              }}\n            >\n              {m.content}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Badge } from \"@chakra-ui/layout\";\n\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\n  return (\n    <Badge\n      px={2}\n      py={1}\n      borderRadius=\"lg\"\n      m={1}\n      mb={2}\n      variant=\"solid\"\n      fontSize={12}\n      colorScheme=\"purple\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n    >\n      {user.name}\n      {admin === user._id && <span> (Admin)</span>}\n      <CloseIcon pl={1} />\n    </Badge>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nconst UserListItem = ({ handleFunction }) => {\n  const { user } = ChatState();\n\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"lg\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>Email : </b>\n          {user.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n\n      console.log(data._id);\n      // setSelectedChat(\"\");\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleAddUser = async (user1) => {\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  return (\n    <>\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {selectedChat.chatName}\n          </ModalHeader>\n\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\n              {selectedChat.users.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  admin={selectedChat.groupAdmin}\n                  handleFunction={() => handleRemove(u)}\n                />\n              ))}\n            </Box>\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                ml={1}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n\n            {loading ? (\n              <Spinner size=\"lg\" />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => handleAddUser(user)}\n                />\n              ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\n              Leave Group\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","import { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport SingleChat from \"./SingleChat\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"68%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from \"@chakra-ui/layout\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst GroupChatModal = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const { user, chats, setChats } = ChatState();\n\n  const handleGroup = (userToAdd) => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const handleDelete = (delUser) => {\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n  };\n\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: \"Please fill all the feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(\n        `/api/chat/group`,\n        {\n          name: groupChatName,\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\n        },\n        config\n      );\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            Create Group Chat\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <FormControl>\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n              {selectedUsers.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => handleDelete(u)}\n                />\n              ))}\n            </Box>\n            {loading ? (\n              // <ChatLoading />\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 4)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleGroup(user)}\n                  />\n                ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\n              Create Chat\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModal;\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst MyChats = ({ fetchAgain }) => {\n  const [loggedUser, setLoggedUser] = useState();\n\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"31%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        My Chats\n        <GroupChatModal>\n          <Button\n            d=\"flex\"\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n            rightIcon={<AddIcon />}\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModal>\n      </Box>\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"white\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n              >\n                <Text>\n                  {!chat.isGroupChat\n                    ? getSender(loggedUser, chat.users)\n                    : chat.chatName}\n                </Text>\n                {chat.latestMessage && (\n                  <Text fontSize=\"xs\">\n                    <b>{chat.latestMessage.sender.name} : </b>\n                    {chat.latestMessage.content.length > 50\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                      : chat.latestMessage.content}\n                  </Text>\n                )}\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\n//import { useHistory } from \"react-router-dom\";\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport ChatLoading from \"../ChatLoading\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport ProfileModal from \"./ProfileModal\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    chats,\n    setChats,\n  } = ChatState();\n\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  //const history = useHistory();\n  const navigate = useNavigate()\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    navigate(\"/\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n    console.log(userId);\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" onClick={onOpen}>\n            <i className=\"fas fa-search\"></i>\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n              Search User\n            </Text>\n          </Button>\n        </Tooltip>\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\n          Talk-A-Tive\n        </Text>\n        <div>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} />\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\n              <Avatar\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n              />\n            </MenuButton>\n            <MenuList>\n              <ProfileModal user={user}>\n                <MenuItem>My Profile</MenuItem>{\" \"}\n              </ProfileModal>\n              <MenuDivider />\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChat(user._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","import { Box } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport Chatbox from \"../components/Chatbox\";\nimport MyChats from \"../components/MyChats\";\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatpage = () => {\n  const [fetchAgain, setFetchAgain] = useState(false);\n  const { user } = ChatState();\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {user && <SideDrawer />}\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\n        {user && <MyChats fetchAgain={fetchAgain} />}\n        {user && (\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default Chatpage;\n","export const CREATE = 'CREATE';\n//export const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\nexport const FETCH_ALL = 'FETCH_ALL';\n//export const LIKE = 'LIKE';\n\nexport const AUTH = 'AUTH';\nexport const LOGOUT = 'LOGOUT';","import axios from 'axios';\n\n//const baseURL = axios.create({ baseURL: 'https://apartmatesearch.herokuapp.com' });\n//const url = 'http://localhost:8000'\nconst API = axios.create({ baseURL: 'https://apartmatesearch.herokuapp.com' });\nconst url = 'https://apartmatesearch.herokuapp.com';\nAPI.interceptors.request.use((req) => {\n    if (localStorage.getItem('form')) {\n      req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('form')).token}`;\n    }\n\n    return req;\n});\n\nexport const fetchPosts = () => API.get('/posts');\n\nexport const createPost = (newPost) => API.post('/posts', newPost);\n//export const likePost = (id) => axios.patch(`${url}/${id}/likePost`);\n//export const updatePost = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost);\n//export const deletePost = (id) => axios.delete(`https://apartmatesearch.herokuapp.com/${id}`);\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\nexport const signIn = (formData) => API.post('/user/signin', formData);\nexport const signUp = (formData) => API.post('/user/signup', formData);\nexport const fetchUsers = () => API.get('/user');\n","import { FETCH_ALL, CREATE, DELETE} from '../constants/actionTypes';\n\nimport * as api from '../api/index.js';\n\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const { data } = await api.fetchPosts();\n\n    dispatch({ type: FETCH_ALL, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    console.log(JSON.stringify(post)+ \"createPost JSON.stringify(post)\");\n    const { data } = await api.createPost(post);\n    console.log(JSON.stringify(data)+ \"createPost JSON.stringify(data)\");\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getUsers = () => async (dispatch) => {\n  try {\n    \n    const { data } = await api.fetchUsers();\n    \n\n    dispatch({ type: FETCH_ALL, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n/*\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n*/\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    console.log(\"deleting post with id \" + id.id);\n    await api.deletePost(id.id);\n    // console.log(\"deleting post with id \" + id.id);\n    dispatch({ type: DELETE, payload: id.id });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n\n","import React from 'react';\nimport classes from './Card.module.css';\n\nfunction Card(props) {\n  return <div className={classes.card}>{props.children}</div>;\n}\n\nexport default Card;\n","\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n  },\n  input: {\n    width: 42,\n  },\n});\n\nexport default function Scrolebar() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(30);\n\n  const handleSliderChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = (event) => {\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleBlur = () => {\n    if (value < 0) {\n      setValue(0);\n    } else if (value > 100) {\n      setValue(100);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"input-slider\" gutterBottom>\n        Volume\n      </Typography>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item>\n          <VolumeUp />\n        </Grid>\n        <Grid item xs>\n          <Slider\n            value={typeof value === 'number' ? value : 0}\n            onChange={handleSliderChange}\n            aria-labelledby=\"input-slider\"\n          />\n        </Grid>\n        <Grid item>\n          <Input\n            className={classes.input}\n            value={value}\n            margin=\"dense\"\n            onChange={handleInputChange}\n            onBlur={handleBlur}\n            inputProps={{\n              step: 10,\n              min: 0,\n              max: 100,\n              type: 'number',\n              'aria-labelledby': 'input-slider',\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport Card from '../ui/Card';\nimport classes from './NewMeetupForm.module.css';\nimport { TextField, Typography, Paper,Button, Grid  } from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport useStyles from './styles';\nimport Scrolebar from './Scrolebar';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { createPost } from '../../actions/posts';\n\n\n\nconst BootstrapInput = withStyles((theme) => ({\n    root: {\n      'label + &': {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      borderRadius: 4,\n      position: 'relative',\n      backgroundColor: theme.palette.background.paper,\n      border: '1px solid #ced4da',\n      fontSize: 16,\n      padding: '10px 26px 10px 12px',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      '&:focus': {\n        borderRadius: 4,\n        borderColor: '#80bdff',\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n      },\n    },\n  }))(InputBase);\n  \n  const useStyler = makeStyles((theme) => ({\n    margin: {\n      margin: theme.spacing(1),\n    },\n  }));\n\nconst Apartment = ({ currentId, setCurrentId, user, setUser}) => {\n    const post = useSelector((state) => (currentId ? state.posts.find((description) => description._id === currentId) : null));\n\n    const [postData, setPostData] = useState({title: '', selectedFile: '', tags: '', description: '', username: '', max: '', min: '', wanttolive: ''});\n  \n    const [switched, setSwitched] = useState(false);\n    const [isShowap, setIsShownap] = useState(true);\n    const [isShowro, setIsShownro] = useState(false);\n    const [isShowroap, setIsShownroap] = useState(false);\n    const [selectval, setSelectval] = React.useState('');\n    const [roomatenum, setroomatenum] = React.useState('');\n\n    useEffect(() => {\n      console.log(user+\" user\");\n    }, []);\n    \n    \n      useEffect(() => {\n        if (post) setPostData(post);\n      }, [post]);\n  \n  \n    const dispatch = useDispatch();\n    const classstyle = useStyles();\n    const classesslide = useStyler();\n    const classselect = useStyles();\n  \n  \n    const clear = () => {\n      setCurrentId(0);\n      setPostData({title: '', selectedFile: '', tags: '', description: '', username: '', max: '', min: '', wanttolive: ''});\n    };\n  \n    const handleselectChange = (event) => {\n        setSelectval(event.target.value);\n      };\n\n      const handleselectromate = (event) => {\n        setroomatenum(event.target.value);\n      };\n\n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      if (currentId === 0) {\n        dispatch(createPost({ ...postData, username: user, max: postData.max}));\n        console.log(postData);\n        clear();\n      } else {\n        \n        clear();\n      }\n    };\n  \n\n    return(\n\n        <form className={classes.form} onSubmit={handleSubmit}>\n  <div className={classes.control}>\n    <label htmlFor='title'>address</label>\n    <input type='text' required id='title' value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })}/>\n  </div>\n  <div className={classes.control}>\n    <label htmlFor='tags'>number of bedrooms</label>\n    <TextField name=\"tags\" variant=\"outlined\"  fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n  </div>\n\n  <div className={classes.control}>\n    <label htmlFor='min' >house or apartment</label>\n    <div>\n      <FormControl className={classes.margin}>\n        <Select\n          labelId=\"demo-customized-select-label\"\n          id=\"demo-customized-select\"\n          value={selectval}\n          onChange={handleselectChange}\n          input={<BootstrapInput />}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>House</MenuItem>\n          <MenuItem value={20}>Appartment</MenuItem>\n          <MenuItem value={30}>Condo</MenuItem>\n        </Select>\n      </FormControl>\n    \n    </div>\n  </div>\n  {/* <div>\n    <Scrolebar/>\n  </div> */}\n  <div className={classes.control}>\n    <label htmlFor='max'>price per month</label>\n    <TextField name=\"wanttolive\" variant=\"outlined\"  fullWidth value={postData.wanttolive} onChange={(e) => setPostData({ ...postData, wanttolive: e.target.value})} />\n    {/* <TextField name=\"max\" variant=\"outlined\"  fullWidth value={postData.max} onChange={(e) => setPostData({ ...postData, max: e.target.value})} /> */}\n  </div>\n  <div className={classes.control}>\n    <label htmlFor='wanttolive'>number of roomates</label>\n    <FormControl className={classes.margin}>\n        {/* <InputLabel id=\"demo-customized-select-label\">type</InputLabel> */}\n        <Select\n          labelId=\"demo-customized-select-label\"\n          id=\"demo-customized-select\"\n          value={roomatenum}\n          onChange={handleselectromate}\n          input={<BootstrapInput />}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={1}>1</MenuItem>\n          <MenuItem value={2}>2</MenuItem>\n          <MenuItem value={3}>3</MenuItem>\n          <MenuItem value={4}>4</MenuItem>\n          <MenuItem value={5}>5</MenuItem>\n          <MenuItem value={6}>6</MenuItem>\n          <MenuItem value={7}>7+</MenuItem>\n        </Select>\n      </FormControl>\n  </div>\n  <div className={classes.control}>\n    <label htmlFor='wanttolive'>Tag a college</label>\n    <TextField name=\"wanttolive\" variant=\"outlined\"  fullWidth value={postData.wanttolive} onChange={(e) => setPostData({ ...postData, wanttolive: e.target.value})} />\n  </div>\n  <div className={classes.control}>\n    <label htmlFor='wanttolive'>add photos</label>\n    <TextField name=\"wanttolive\" variant=\"outlined\"  fullWidth value={postData.wanttolive} onChange={(e) => setPostData({ ...postData, wanttolive: e.target.value})} />\n  </div>\n  <div className={classes.control}>\n    <label htmlFor='description'>any other things to add</label>\n    <textarea id='description' required rows='5' value={postData.description} onChange={(e) => setPostData({ ...postData, description: e.target.value })}></textarea>\n  </div>\n  <div className={classes.actions}>\n    <button>Add Post</button>\n  </div>\n</form>\n    );\n}\nexport default Apartment;","import React, { useState, useEffect } from 'react';\nimport Card from '../ui/Card';\nimport classes from './NewMeetupForm.module.css';\nimport { TextField, Typography, Paper,Button, Grid  } from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport useStyles from './styles';\nimport Scrolebar from './Scrolebar';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { createPost } from '../../actions/posts';\n\n\n\nconst BootstrapInput = withStyles((theme) => ({\n    root: {\n      'label + &': {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      borderRadius: 4,\n      position: 'relative',\n      backgroundColor: theme.palette.background.paper,\n      border: '1px solid #ced4da',\n      fontSize: 16,\n      padding: '10px 26px 10px 12px',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      '&:focus': {\n        borderRadius: 4,\n        borderColor: '#80bdff',\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n      },\n    },\n  }))(InputBase);\n  \n  const useStyler = makeStyles((theme) => ({\n    margin: {\n      margin: theme.spacing(1),\n    },\n  }));\n\nconst Selling = ({ currentId, setCurrentId, user, setUser}) => {\n    const post = useSelector((state) => (currentId ? state.posts.find((description) => description._id === currentId) : null));\n\n    const [postData, setPostData] = useState({title: '', selectedFile: '', tags: '', description: '', username: '', max: '', min: '', wanttolive: ''});\n  \n    const [switched, setSwitched] = useState(false);\n    const [isShowap, setIsShownap] = useState(true);\n    const [isShowro, setIsShownro] = useState(false);\n    const [isShowroap, setIsShownroap] = useState(false);\n    const [selectval, setSelectval] = React.useState('');\n  \n    useEffect(() => {\n      console.log(user+\" user\");\n    }, []);\n    \n    \n      useEffect(() => {\n        if (post) setPostData(post);\n      }, [post]);\n  \n  \n    const dispatch = useDispatch();\n    const classstyle = useStyles();\n    const classesslide = useStyler();\n    const classselect = useStyles();\n  \n  \n    const clear = () => {\n      setCurrentId(0);\n      setPostData({title: '', selectedFile: '', tags: '', description: '', username: '', max: '', min: '', wanttolive: ''});\n    };\n  \n    const handleselectChange = (event) => {\n        setSelectval(event.target.value);\n      };\n\n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      if (currentId === 0) {\n        dispatch(createPost({ ...postData, username: user, max: postData.max}));\n        console.log(postData);\n        clear();\n      } else {\n        \n        clear();\n      }\n    };\n  \n\n    return(\n\n        <form className={classes.form} onSubmit={handleSubmit}>\n        <div className={classes.control}>\n          <label htmlFor='title'>address</label>\n          <input type='text' required id='title' value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })}/>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='tags'>number of bedrooms</label>\n          <TextField name=\"tags\" variant=\"outlined\"  fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n        </div>\n      \n        <div className={classes.control}>\n          <label htmlFor='min' >house or apartment</label>\n          <div>\n            <FormControl className={classes.margin}>\n              <Select\n                labelId=\"demo-customized-select-label\"\n                id=\"demo-customized-select\"\n                value={selectval}\n                onChange={handleselectChange}\n                input={<BootstrapInput />}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                <MenuItem value={10}>House</MenuItem>\n                <MenuItem value={20}>Appartment</MenuItem>\n                <MenuItem value={30}>Condo</MenuItem>\n              </Select>\n            </FormControl>\n          \n          </div>\n        </div>\n        {/* <div>\n          <Scrolebar/>\n        </div> */}\n        <div className={classes.control}>\n          <label htmlFor='max'>price per month</label>\n          <TextField name=\"wanttolive\" variant=\"outlined\"  fullWidth value={postData.wanttolive} onChange={(e) => setPostData({ ...postData, wanttolive: e.target.value})} />\n          {/* <TextField name=\"max\" variant=\"outlined\"  fullWidth value={postData.max} onChange={(e) => setPostData({ ...postData, max: e.target.value})} /> */}\n        </div>\n       \n        <div className={classes.control}>\n          <label htmlFor='wanttolive'>Tag a college</label>\n          <TextField name=\"wanttolive\" variant=\"outlined\"  fullWidth value={postData.wanttolive} onChange={(e) => setPostData({ ...postData, wanttolive: e.target.value})} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='wanttolive'>add photos</label>\n          <TextField name=\"wanttolive\" variant=\"outlined\"  fullWidth value={postData.wanttolive} onChange={(e) => setPostData({ ...postData, wanttolive: e.target.value})} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='description'>any other things to add</label>\n          <textarea id='description' required rows='5' value={postData.description} onChange={(e) => setPostData({ ...postData, description: e.target.value })}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button>Add Post</button>\n        </div>\n      </form>\n    );\n}\nexport default Selling;","import React, { useState, useEffect } from 'react';\nimport Card from '../ui/Card';\nimport classes from './NewMeetupForm.module.css';\nimport { TextField, Typography, Paper,Button, Grid  } from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport useStyles from './styles';\nimport Scrolebar from './Scrolebar';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Apartment from './Apartment';\nimport Selling from './Selling';\n\nimport { createPost } from '../../actions/posts';\n\n\n\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst useStyler = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\n\n//import FileBase from 'react-file-base64';\n\n\n\nconst NewMeetupForm = ({ currentId, setCurrentId, user, setUser }) => {\n  \n  const post = useSelector((state) => (currentId ? state.posts.find((description) => description._id === currentId) : null));\n\n  const [postData, setPostData] = useState({title: '', selectedFile: '', tags: '', description: '', username: '', max: '', min: '', wanttolive: ''});\n\n  const [switched, setSwitched] = useState(false);\n  const [isShowap, setIsShownap] = useState(true);\n  const [isShowro, setIsShownro] = useState(false);\n  const [isShowroap, setIsShownroap] = useState(false);\n  const [selectval, setSelectval] = React.useState('');\n\n  useEffect(() => {\n    console.log(user+\" user\");\n  }, []);\n  \n  \n    useEffect(() => {\n      if (post) setPostData(post);\n    }, [post]);\n\n\n  const dispatch = useDispatch();\n  const classstyle = useStyles();\n  const classesslide = useStyler();\n  const classselect = useStyles();\n\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({title: '', selectedFile: '', tags: '', description: '', username: '', max: '', min: '', wanttolive: ''});\n  };\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (currentId === 0) {\n      dispatch(createPost({ ...postData, username: user, max: postData.max}));\n      console.log(postData);\n      clear();\n    } else {\n      \n      clear();\n    }\n  };\n\n  const handleselectChange = (event) => {\n    setSelectval(event.target.value);\n  };\n\n  const apartmentClick = event => {\n    setIsShownap(true);\n    setIsShownro(false);\n    setIsShownroap(false);\n  };\n  const roomateClick = event => {\n    setIsShownro(true);\n    setIsShownap(false);\n    setIsShownroap(false);\n  };\n  const roomateapartmentClick = event => {\n    setIsShownroap(true);\n    setIsShownro(false);\n    setIsShownap(false);\n  };\n\n  \n\n  if (!user) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to create your own memories and like other's memories.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  return (\n    \n    <>\n\n   \n    <Card> \n      \n      <Tooltip title=\"selling an appartment or house\" arrow>\n    <Button onClick={apartmentClick}>Selling?</Button>\n    </Tooltip>\n    <Tooltip title=\"looking for roomates and an apartment\" arrow>\n    <Button onClick={roomateClick}>roomate?</Button>\n    </Tooltip>\n    <Tooltip title=\"have an apartment and looking for roomates\" arrow>\n    <Button onClick={roomateapartmentClick}>Have an apartment?</Button>\n    </Tooltip>\n{/* 👇️ show elements on click */}\n{isShowap && (\n  <Selling currentId={currentId} setCurrentId={setCurrentId} user={user} setUser={setUser}/>\n)}\n{isShowroap && (\n  <Apartment currentId={currentId} setCurrentId={setCurrentId} user={user} setUser={setUser}/>\n)}\n\n{isShowro && (\n  <form className={classes.form} onSubmit={handleSubmit}>\n\n  <div className={classes.control}>\n    <label htmlFor='min' >min price range</label>\n    <TextField name=\"min\" variant=\"outlined\"  fullWidth value={postData.min} onChange={(e) => setPostData({ ...postData, min: e.target.value})} />\n  </div>\n  {/* <div>\n    <Scrolebar/>\n  </div> */}\n  <div className={classes.control}>\n    <label htmlFor='max'>max price range</label>\n    <TextField name=\"max\" variant=\"outlined\"  fullWidth value={postData.max} onChange={(e) => setPostData({ ...postData, max: e.target.value})} />\n  </div>\n  <div className={classes.control}>\n    <label htmlFor='wanttolive'>where are you looking to move</label>\n    <TextField name=\"wanttolive\" variant=\"outlined\"  fullWidth value={postData.wanttolive} onChange={(e) => setPostData({ ...postData, wanttolive: e.target.value})} />\n  </div>\n\n  <div className={classes.control}>\n    <label htmlFor='description'>any other things to add</label>\n    <textarea id='description' required rows='5' value={postData.description} onChange={(e) => setPostData({ ...postData, description: e.target.value })}></textarea>\n  </div>\n  <div className={classes.actions}>\n    <button>Add Post</button>\n  </div>\n</form>\n)}\n\n\n      </Card> \n      \n     </>\n  );\n}\n\nexport default NewMeetupForm;\n","import React,{useEffect} from 'react';\nimport Card from '../ui/Card';\nimport { CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\nimport classes from './MeetupItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport useStyles from '../meetups/styles.js';\n\n\n\n\n  const MeetupItem = ({ post, setCurrentId, user, setUser }) => {\n  const dispatch = useDispatch();\n  const classstyles = useStyles();\n  // const user = JSON.parse(localStorage.getItem('name'));\n  \n  \n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <div className={classes.content}>\n          <h3>{post.title}</h3>\n          <div className={classstyles.details}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.max}</Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.min}</Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.wanttolive}</Typography>\n            </div>\n          <p>{post.description}</p>\n        </div>\n        <div className={classes.actions}>\n        <Button>Chat</Button>\n        <p variant=\"body2\">{moment(post.createdAt).fromNow()}</p>\n       \n        </div>\n      </Card>\n    </li>\n  );\n}\n\nexport default MeetupItem;\n","import React,{useEffect, useState} from 'react';\nimport MeetupItem from './MeetupItem';\nimport classes from './MeetupList.module.css';\nimport { Paper,Typography,TextField } from '@material-ui/core';\nimport SearchBar from \"material-ui-search-bar\";\nimport Alert from '@material-ui/lab/Alert';\nimport { useSelector } from 'react-redux';\n\n\nfunction List(props) {\n    const posts = useSelector((state) => state.posts);\n    const [counter, setCounter]= useState(true);\n    const [postList, setPostList] = useState([]);\n    \n    // useEffect(() => {\n    //     console.log(props.input + \" props.inputTextt\")\n    //     {posts.map((post) => {\n    //         console.log(props.input + \" props.inputText\")\n    //         if(post.title === props.input){\n    //             setPostList(current => [...current, post]);\n    //             setCounter(true);\n    //         }\n    //         if(props.input === \"\"){\n\n    //         }\n    //     else{\n    //         return <div></div>;\n    //     }\n    // })}\n    //   }, []);\n\n\n    const filteredData = posts.filter((post) =>{\n        if (props.input === '') {\n            return post;\n        }\n        //return the item which contains the user input\n        else {\n            return post.title.toLowerCase().includes(props.input)\n        }\n    })\n        //if no input the return the original\n        \n\n    return (\n      <>\n      { filteredData ? (\n          <ul className={classes.list}>\n          {filteredData.map((post) => (\n            <MeetupItem\n              post={post} \n              setCurrentId={props.setCurrentId}\n            />\n          ))}\n        </ul>\n          )\n      :\n      (\n          <Alert severity=\"info\">You have no post yet.  Add your own posts by going to the \"Add Post\" page</Alert>\n      )}\n      \n  </>\n  \n    );\n  }\n    \n\nexport default List","import React,{useState,useEffect} from 'react';\nimport MeetupItem from './MeetupItem';\nimport classes from './MeetupList.module.css';\nimport Alert from '@material-ui/lab/Alert';\nimport { Paper,Typography,TextField } from '@material-ui/core';\nimport SearchBar from \"material-ui-search-bar\";\nimport { useSelector } from 'react-redux';\nimport List from './List';\n\n\n  const MeetupList = ({ setCurrentId, user }) => {\n    const posts = useSelector((state) => state.posts);\n    const [counter, setCounter]= useState(0);\n    const [postList, setPostList] = useState([]);\n  const [inputText, setInputText] = useState(\"\");\n\n\n  \n  let inputHandler = (e) => {\n    //convert input text to lower case\n    var lowerCase = e.target.value.toLowerCase();\n    setInputText(lowerCase);\n  };\n\n\n  if (!user) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to create your own memories and like other's memories.\n        </Typography>\n      </Paper>\n    );\n  }\n  return (\n    <div className=\"main\">\n      <div className=\"search\">\n        <TextField\n          id=\"outlined-basic\"\n          onChange={inputHandler}\n          variant=\"outlined\"\n          fullWidth\n          label=\"Search by title\"\n        />\n      </div>\n      <List input={inputText} setCurrentId={setCurrentId}/>\n      {/* <>\n      { counter ? (\n          <ul className={classes.list}>\n          {postList.map((post) => (\n            <MeetupItem\n              post={post} \n              setCurrentId={setCurrentId}\n            />\n          ))}\n        </ul>\n          )\n      :\n      (\n          <Alert severity=\"info\">You have no post yet.  Add your own posts by going to the \"Add Post\" page</Alert>\n      )}\n      \n  </> */}\n    </div>\n  );\n}\n\nexport default MeetupList;\n","import { makeStyles } from '@material-ui/core/styles';\nimport { deepPurple } from '@material-ui/core/colors';\n\nexport default makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 15,\n    margin: '30px 0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px 50px',\n  },\n  heading: {\n    color: 'rgba(0,183,255, 1)',\n    textDecoration: 'none',\n  },\n  image: {\n    marginLeft: '15px',\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    width: '400px',\n  },\n  profile: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '400px',\n  },\n  userName: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  brandContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n}));\n","import React, { useState, useEffect } from 'react';\n\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\n\nimport classes from './MainNavigation.module.css'\n\nimport { Link, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n//import decode from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\n\nimport * as actionType from '../../constants/actionTypes';\nimport useStyles from './styles';\n\nconst Navbar = (props ) => {\n\n  const [username, setUserName] = useState(\"\");\n  useEffect(async () => {\n    setUserName(\n      await JSON.parse(localStorage.getItem(\"userInfo\")\n      )\n    );\n  }, []);\n  \n  const dispatch = useDispatch();\n  const location = useLocation();\n  \n  const classess = useStyles();\n  const navigate = useNavigate()\n  const logout = () => {\n    dispatch({ type: actionType.LOGOUT });\n    localStorage.removeItem(\"name\")\n    props.setUser(undefined);\n   // props.history.push(\"/Auth\");\n    navigate(\"/\")\n    \n  };\n\n  useEffect(() => {\n    console.log(username + \"user\");\n  }, []);\n  \n  \n// useEffect(() => {\n//     const token = props.user?.token;\n\n//     if (token) {\n//       const decodedToken = decode(token);\n\n//       if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n//     }\n\n//     props.setUser(JSON.parse(localStorage.getItem('name')));\n//   }, [location]);\n\nconst stringifiedPerson = localStorage.getItem(\"name\");\nconst personAsObjectAgain = JSON.parse(stringifiedPerson);\n\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>Apartmate</div>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/Home/Blog\">Blog page</Link>\n          </li>\n          <li>\n            <Link to=\"/Home/CreatePost\">Add Post</Link>\n          </li>\n          <li>\n            <Link to=\"/Home/MyPost\">My Posts</Link>\n          </li>\n          <li>\n            <Link to=\"/Home/Chats\">Chat</Link>\n          </li>\n          {/* <li>\n            <Link to='/checkout'>checkout</Link>\n          </li> */}\n          <li>\n          \n          {username ? (\n          <div className={classess.profile}>\n            {/* <Avatar className={classess.purple} alt={user?.result.name} src={user?.result.imageUrl}>{user?.result.name.charAt(0)}</Avatar>\n            <Typography className={classess.userName} variant=\"h6\">{user?.result.name}</Typography> */}\n            <Button variant=\"contained\" className={classess.logout} color=\"secondary\" onClick={logout}>Logout</Button>\n          </div>\n        ) : (\n          \n          <Button component={Link} to=\"/\" variant=\"contained\" color=\"primary\">Sign In</Button>\n        )}\n          </li>\n\n\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default Navbar;","import React from 'react';\nimport classes from './Card.module.css';\n\nfunction CustomCard(props) {\n  return <div className={classes.card}>{props.children}</div>;\n}\n\nexport default CustomCard;\n","import React,{useEffect} from 'react';\nimport Card from '../ui/Card';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\nimport classes from './MeetupItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { deletePost } from '../../actions/posts';\nimport useStyles from '../meetups/styles.js';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyless = makeStyles((theme) => ({\n    root: {\n      color: theme.palette.text.primary,\n    },\n  }));\n\n\n\n  const PersonalPost = ({ post, setCurrentId, user, setUser }) => {\n  const dispatch = useDispatch();\n  const classstyles = useStyles();\n  // const user = JSON.parse(localStorage.getItem('name'));\n  \n \n\n  const handleOnSubmit = (e) =>{\n    e.preventDefault();\n    console.log(post._id, \" post id\");\n    dispatch(deletePost({id: post._id}));\n\n  }\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <div className={classes.content}>\n          <h3>{post.title}</h3>\n          <div className={classstyles.details}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.max}</Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.min}</Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.wanttolive}</Typography>\n            </div>\n          <p>{post.description}</p>\n        </div>\n        <Button onClick={handleOnSubmit}>\n            <DeleteIcon/>\n        </Button>\n        <div className={classes.actions}>\n        <Button>Chat</Button>\n        <p variant=\"body2\">{moment(post.createdAt).fromNow()}</p>\n       \n        </div>\n      </Card>\n    </li>\n  );\n}\n\nexport default PersonalPost;\n","import React,{useState,useEffect} from 'react';\nimport CustomMeetupItem from './CustomMeetupItem';\nimport classes from './MeetupList.module.css';\nimport { Paper,Typography } from '@material-ui/core';\nimport MeetupList from './MeetupList';\nimport NewMeetupForm from './NewMeetupForm';\nimport MeetupItem from './MeetupItem'\nimport PersonalPost from './PersonalPost';\nimport Alert from '@material-ui/lab/Alert';\n\nimport { useSelector } from 'react-redux';\n\n\n\n  const MyPost = ({ currentId,setCurrentId, user, setUser }) => {\n  const posts = useSelector((state) => state.posts);\n  const [counter, setCounter]= React.useState(false);\n  const [postList, setPostList] = useState([]);\n  const [hasError, setError] = React.useState(false);\n\n\n  \n\n  useEffect(() => {\n    {posts.map((post) => {\n      console.log(JSON.stringify(post) + \" JSON.stringify(post)\");\n        if(post.username === user){\n            setPostList(current => [...current, post]);\n            setCounter(true);\n    }\n    else{\n        return <div></div>;\n    }\n})}\n  }, []);\n\n  \n  if (!user) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to create your own memories and like other's memories.\n        </Typography>\n      </Paper>\n    );\n  }\n  \n  return (\n    \n<>\n    { counter ? (\n        <ul className={classes.list}>\n        {postList.map((post) => (\n          <PersonalPost\n            post={post} \n            setCurrentId={setCurrentId}\n          />\n        ))}\n      </ul>\n        )\n    :\n    (\n        <Alert severity=\"info\">You have no Posts yet.  Add your own posts by going to the \"Add Posts\" page</Alert>\n    )}\n</>\n  );\n}\n\n\nexport default MyPost;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Grow, Grid, Button } from '@material-ui/core';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { getPosts } from '../../actions/posts';\nimport NewMeetupForm from '../meetups/NewMeetupForm.js';\nimport MeetupList from '../meetups/MeetupList.js';\n//import AllMeetupsPage from '../../pages/AllMeetups';\n//import Layout from '../layout/NewLayout';\nimport Navbar from '../Navbar/Navbar';\n//import Auth from '../Auth/Auth.js';\n//import { getUsers } from '../../actions/posts';\nimport MyPost from '../meetups/MyPost';\n//import Chat from '../../pages/Chat';\nimport Chatpage from '../../Pages/Chatpage';\n//import SetAvatar from '../SetAvatar';\n\n\n\nconst Home = (props ) => {\n  //const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"name\")));\n\n  const [username, setUserName] = useState(\"\");\n  useEffect(async () => {\n    setUserName(\n      await JSON.parse(localStorage.getItem(\"userInfo\")\n      )\n    );\n  }, []);\n  const [currentId, setCurrentId] = useState(0);\n  const dispatch = useDispatch();\n  \n  //  useEffect(() => {\n  //   dispatch(getUsers());\n  // }, [currentId, dispatch]);\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [currentId, dispatch]);\n  \n  \n\n  return (\n    \n    \n    \n    \n<div>\n            <Navbar user={username} setUser={setUserName} />\n            <Routes>\n             <Route path=\"Blog\" element={<MeetupList currentId={props.currentId} setCurrentId={props.setCurrentId} user={username} setUser={setUserName}/>}/> \n            \n            <Route path=\"CreatePost\" element={<NewMeetupForm currentId={props.currentId} setCurrentId={props.setCurrentId} user={username} setUser={setUserName}/>}/>\n           \n            <Route path=\"MyPost\" element={<MyPost currentId={props.currentId} setCurrentId={props.setCurrentId} user={username} setUser={setUserName}/>}/> \n            {/* <Route path=\"SetAvatar\" element={<SetAvatar/>}/> */}\n            <Route path= \"chats\" element={<Chatpage />} /> \n            </Routes>\n            </div>           \n             \n      \n      \n        \n      \n  );\n};\n\nexport default Home;\n","import React,{useState,useEffect} from \"react\";\nimport \"./App.css\";\n\nimport Homepage from \"./Pages/Homepage\";\nimport {BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Chatpage from \"./Pages/Chatpage\";\nimport Home from \"./components/Home/Home\";\n\nfunction App() {\n\n  \n  const [currentId, setCurrentId] = useState(0);\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/\" element={<Homepage />}/>\n      {/* <Route path=\"/\" component={Homepage} exact /> */}\n      {/* <Route path=\"/chats\" element={<Chatpage />} /> */}\n      <Route path=\"/Home/*\" element={<Home currentId={currentId} setCurrentId={setCurrentId} />}/>   \n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\n\nimport posts from './posts';\n\nexport const reducers = combineReducers({ posts });\n","import { FETCH_ALL, CREATE, DELETE} from '../constants/actionTypes';\n\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    //case LIKE:\n    //  return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case CREATE:\n      return [...posts, action.payload];\n    //case UPDATE:\n    //  return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { reducers } from './reducers';\n\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n  <ChakraProvider>\n\n    <BrowserRouter>\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </BrowserRouter>\n  </ChakraProvider>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MeetupItem_item__16n8F\",\"image\":\"MeetupItem_image__1NY8N\",\"content\":\"MeetupItem_content__3JjUt\",\"actions\":\"MeetupItem_actions__i7I9f\"};"],"sourceRoot":""}