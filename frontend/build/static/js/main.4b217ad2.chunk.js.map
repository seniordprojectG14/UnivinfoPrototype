{"version":3,"sources":["components/postComponents/PostList.module.css","components/Navbar/MainNavigation.module.css","components/ui/Card.module.css","components/ui/Card.js","constants/actionTypes.js","components/postComponents/styles.js","components/postComponents/PersonalPost.js","actions/posts.js","components/postComponents/MyPost.js","components/postComponents/PostItem.js","components/postComponents/PostChain.js","components/postComponents/PostList.js","components/postComponents/Post.js","utils/cropImage.js","components/SingleChat.js","components/postComponents/NewPost.js","components/Navbar/styles.js","components/Navbar/Navbar.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","Context/ChatProvider.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/Homepage.js","components/Home/Home.js","App.js","reportWebVitals.js","reducers/index.js","reducers/posts.js","index.js","components/postComponents/PostItem.module.css","components/postComponents/NewPost.module.css"],"names":["module","exports","Card","props","className","classes","card","children","CREATE","DELETE","FETCH_ALL","makeStyles","theme","root","margin","spacing","paper","padding","form","display","flexWrap","justifyContent","fileInput","width","buttonSubmit","marginBottom","PersonalPost","color","palette","text","primary","post","dispatch","setCurrentId","user","setUser","useDispatch","classstyles","useStyles","item","content","title","details","Typography","variant","component","max","min","wanttolive","description","Button","onClick","e","id","preventDefault","console","log","_id","api","type","payload","message","actions","moment","createdAt","fromNow","MyPost","currentId","posts","useSelector","state","React","useState","counter","setCounter","postList","setPostList","username","setUserName","useEffect","JSON","parse","localStorage","getItem","map","stringify","current","list","Alert","severity","Paper","align","PostItem","proplist","CardMedia","media","image","photo","address","nbedrooms","style","textalign","paddingLeft","src","photos","height","alt","PostChain","college","firstAddress","pclist","setPcist","lookingfor","maxval","minval","typeval","bedroomsval","PostList","withStyles","marginTop","input","borderRadius","position","backgroundColor","background","border","fontSize","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","socket","selectedChatCompare","Post","find","postData","setPostData","setImage","clear","handleSubmit","headers","formdata","FormData","i","length","append","name","axios","onSubmit","control","htmlFor","value","onChange","target","multiple","event","file","files","accept","rows","NewPost","selectedFile","appBar","flexDirection","alignItems","heading","textDecoration","marginLeft","toolbar","profile","userName","brandContainer","purple","getContrastText","deepPurple","Navbar","navigate","useNavigate","classess","useLocation","stringifiedPerson","header","logo","to","logout","removeItem","Link","isSameSenderMargin","messages","m","userId","sender","isSameSender","undefined","isLastMessage","isSameUser","getSender","loggedUser","users","ProfileModal","useDisclosure","isOpen","onOpen","onClose","d","base","icon","size","isCentered","h","flexDir","boxSize","pic","md","ChatContext","createContext","ChatState","useContext","ChatProvider","selectedChat","setSelectedChat","notification","setNotification","chats","setChats","userInfo","Provider","ScrollableChat","label","placement","hasArrow","mt","mr","cursor","maxWidth","UserBadgeItem","handleFunction","admin","px","py","mb","colorScheme","pl","UserListItem","bg","_hover","w","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","loading","setLoading","renameloading","setRenameLoading","toast","useToast","handleSearch","query","config","Authorization","token","get","data","status","duration","isClosable","handleRename","put","chatId","chatName","response","handleAddUser","user1","u","groupAdmin","handleRemove","pb","placeholder","ml","isLoading","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","key","io","on","newMessageRecieved","chat","includes","isGroupChat","toUpperCase","p","overflowY","alignSelf","onKeyDown","isRequired","options","lastTypingTime","Date","getTime","setTimeout","Chatbox","borderWidth","ChatLoading","GroupChatModal","selectedUsers","setSelectedUsers","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","accessChat","c","count","effect","Effect","SCALE","notif","n","as","borderBottomWidth","Chatpage","Login","show","setShow","setUsername","password","setPassword","submitHandler","setItem","Signup","handleClick","setName","confirmpassword","setConfirmpassword","setPic","picLoading","setPicLoading","pics","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","Homepage","maxW","centerContent","isFitted","Home","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b217ad2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PostList_list__3uec8\",\"main\":\"PostList_main__3WuIU\",\"space\":\"PostList_space__2cSJ7\",\"search\":\"PostList_search__aUt2v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__1h0jH\",\"logo\":\"MainNavigation_logo__2PsxD\",\"active\":\"MainNavigation_active__3VDdG\",\"badge\":\"MainNavigation_badge__295Ki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3_jzl\"};","import React from 'react';\nimport classes from './Card.module.css';\n\nfunction Card(props) {\n  return <div className={classes.card}>{props.children}</div>;\n}\n\nexport default Card;\n","export const CREATE = 'CREATE';\n//export const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\nexport const FETCH_ALL = 'FETCH_ALL';\n//export const LIKE = 'LIKE';\n\nexport const AUTH = 'AUTH';\nexport const LOGOUT = 'LOGOUT';","\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));\n","import React,{useEffect} from 'react';\nimport Card from '../ui/Card';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\nimport classes from './PostItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { deletePost } from '../../actions/posts';\nimport useStyles from './styles.js';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyless = makeStyles((theme) => ({\n    root: {\n      color: theme.palette.text.primary,\n    },\n  }));\n\n\n\n  const PersonalPost = ({ post, setCurrentId, user, setUser }) => {\n  const dispatch = useDispatch();\n  const classstyles = useStyles();\n  // const user = JSON.parse(localStorage.getItem('name'));\n  \n \n\n  const handleOnSubmit = (e) =>{\n    e.preventDefault();\n    console.log(post._id, \" post id\");\n    dispatch(deletePost({id: post._id}));\n\n  }\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <div className={classes.content}>\n          <h3>{post.title}</h3>\n          <div className={classstyles.details}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.max}</Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.max}</Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.min}</Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.wanttolive}</Typography>\n            </div>\n          <p>{post.description}</p>\n        </div>\n        <Button onClick={handleOnSubmit}>\n            <DeleteIcon/>\n        </Button>\n        <div className={classes.actions}>\n        <Button>Chat</Button>\n        <p variant=\"body2\">{moment(post.createdAt).fromNow()}</p>\n       \n        </div>\n      </Card>\n    </li>\n  );\n}\n\nexport default PersonalPost;\n","import { FETCH_ALL, CREATE, DELETE} from '../constants/actionTypes';\nimport axios from 'axios';\nimport * as api from '../api/index.js';\n\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n    // const { data } = await api.fetchPosts();\n    const { data } = await axios.get(\n      \"/posts\",\n      {},\n      config\n    );\n    console.log(JSON.stringify(data) + \" data both\")\n    dispatch({ type: FETCH_ALL, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    //console.log(JSON.stringify(post)+ \"createPost JSON.stringify(post)\");\n    const { data } = await api.createPost(post);\n    ///console.log(JSON.stringify(data)+ \"createPost JSON.stringify(data)\");\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getUsers = () => async (dispatch) => {\n  try {\n    \n    const { data } = await api.fetchUsers();\n    \n\n    dispatch({ type: FETCH_ALL, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n/*\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n*/\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n   /// console.log(\"deleting post with id \" + id.id);\n    await api.deletePost(id.id);\n    // console.log(\"deleting post with id \" + id.id);\n    dispatch({ type: DELETE, payload: id.id });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n\n","import React,{useState,useEffect} from 'react';\nimport classes from './PostList.module.css';\nimport { Paper,Typography } from '@material-ui/core';\nimport PersonalPost from './PersonalPost';\nimport Alert from '@material-ui/lab/Alert';\n\nimport { useSelector } from 'react-redux';\n\n\n\n  const MyPost = ({ currentId,setCurrentId, user, setUser }) => {\n  const posts = useSelector((state) => state.posts);\n  const [counter, setCounter]= React.useState(false);\n  const [postList, setPostList] = useState([]);\n  const [hasError, setError] = React.useState(false);\n  const [username, setUserName] = useState(\"\");\n  useEffect(async () => {\n    setUserName(\n      await JSON.parse(localStorage.getItem(\"userInfo\")\n      )\n    );\n  }, []);\n\n  \n\n  useEffect(() => {\n    {posts.map((post) => {\n      console.log(JSON.stringify(post) + \" JSON.stringify(post)\");\n        if(post.username === user){\n            setPostList(current => [...current, post]);\n            setCounter(true);\n    }\n    else{\n        return <div></div>;\n    }\n})}\n  }, []);\n\n  \n  if (!username) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to see your listing.\n        </Typography>\n      </Paper>\n    );\n  }\n  \n  return (\n    \n<>\n    { counter ? (\n        <ul className={classes.list}>\n        {postList.map((post) => (\n          <PersonalPost\n            post={post} \n            setCurrentId={setCurrentId}\n          />\n        ))}\n      </ul>\n        )\n    :\n    (\n        <Alert severity=\"info\">You have no Posts yet.  Add your own posts by going to the \"Add Posts\" page</Alert>\n    )}\n</>\n  );\n}\n\n\nexport default MyPost;\n","import React,{useEffect, useState} from 'react';\nimport Card from '../ui/Card';\nimport { CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\nimport classes from './PostItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport useStyles from './styles.js';\n\n\n\n\nconst PostItem = ({ post, setCurrentId, user, setUser,proplist }) => {\n  const classstyles = useStyles();\n  \n\n    return(\n      <li className={classes.item}>\n      <Card>\n      <CardMedia className={classes.media} image={post.photo || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.photo} />\n        <div className={classes.content}>\n          <h3>addres: {post.address}</h3>\n          <div className={classstyles.details}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">number of bedrooms: {post.nbedrooms}</Typography>\n        <div style={{textalign: 'center',\n            paddingLeft: '480px'}}>\n        <img src={post.photos[0]}  height={'200px'} width={'300px'} alt=\"BigCo Inc. logo\"/>\n        </div>\n    \n    \n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">username:{post.username}</Typography>\n            </div>\n          <p>{post.description}</p>\n        </div>\n        <div className={classes.actions}>\n        <Button>Chat</Button>\n        <p variant=\"body2\">{moment(post.createdAt).fromNow()}</p>\n       \n        </div>\n      </Card>\n    </li>\n\n    );\n    }\n    \n\nexport default PostItem;","import React,{useEffect, useState} from 'react';\nimport PostItem from './PostItem';\n\n\n\n\n  const PostChain = ({college, firstAddress, address, pclist, setPcist, list, counter, lookingfor, maxval, minval, typeval, bedroomsval, post, setCurrentId, user, setUser,proplist }) => {\n\n\n \n\n\n\n\n\n\n\n\n \n  \n  \n\n\n        return(\n            <PostItem post={post} setCurrentId={setCurrentId} user={user} setUser={setUser}/>  \n        )\n\n  \n}\n\nexport default PostChain;","import React,{useRef,useState,useEffect} from 'react';\nimport classes from './PostList.module.css';\nimport PostChain from './PostChain'\nimport { useSelector } from 'react-redux';\n\n\n\n\n  const PostList = ({ setCurrentId, user }) => {\n    const posts = useSelector((state) => state.posts);\n   \n  return (\n\n    <div className=\"main\">\n<ul className={classes.list}>\n  {posts?.map((post) => {\n     return(\n       <PostChain  post={post}  setCurrentId={setCurrentId} />\n   );\n  })}\n</ul>\n    </div>\n  );\n}\n\nexport default PostList;\n","import React, { useState, useEffect } from 'react';\nimport classes from './NewPost.module.css';\nimport { TextField, Typography, Paper,Button, Grid  } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport InputBase from '@material-ui/core/InputBase';\n\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ThemeProvider, createMuiTheme, makeStyles, withStyles } from '@material-ui/core/styles';\n\nimport axios from 'axios';\nimport { dataURLtoFile } from \"../../utils/dataURLtoFile\";\nimport getCroppedImg, { generateDownload } from \"../../utils/cropImage\";\n\nconst BootstrapInput = withStyles((theme) => ({\n    root: {\n      'label + &': {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      borderRadius: 4,\n      position: 'relative',\n      backgroundColor: theme.palette.background.paper,\n      border: '1px solid #ced4da',\n      fontSize: 16,\n      padding: '10px 26px 10px 12px',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      '&:focus': {\n        borderRadius: 4,\n        borderColor: '#80bdff',\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n      },\n    },\n  }))(InputBase);\n  \n  const useStyler = makeStyles((theme) => ({\n    margin: {\n      margin: theme.spacing(1),\n    },\n  }));\n\n\n\nconst Post = ({ currentId, setCurrentId, user, setUser}) => {\n    const post = useSelector((state) => (currentId ? state.posts.find((description) => description._id === currentId) : null));\n\n\n    const [postData, setPostData] = useState({address: '', photos: '', description: '', username: ''});\n  \n    const [image, setImage] = React.useState(null);\n  const [croppedArea, setCroppedArea] = React.useState(null);\n\n\n\n   \n\n    \n\n\n   \n    \n      useEffect(() => {\n        if (post) setPostData(post);\n      }, [post]);\n\n   \n    const clear = () => {\n      setCurrentId(0);\n      setPostData({address: '', photos: '', description: '', username: ''});\n    };\n  \n \n    const fileSelected = event => {\n      const file = event.target.files\n      setImage(file)\n    }\n\n      \n    \n  \n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      };\n\n\n      \n         const formdata = new FormData();\n         \n         for ( let i = 0; i < image.length; i++ ) {\n          formdata.append( \"imagecropped\", image[ i ], image[ i ].name );\n        }\n\n        formdata.append(\"address\", postData.address)\n        formdata.append(\"description\", postData.description)\n        formdata.append(\"username\", user?.username)\n         await axios.post(\"/posts\", formdata, { headers: {\n\t\t\t\t\t'accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'multipart/form-data'\n\t\t\t\t}})\n      if (currentId === 0) {\n        \n        clear();\n      } else {\n        \n        clear();\n      }\n    };\n    \n\n    \n      \n     \n  \n\n    return(\n        <form className={classes.form} onSubmit={handleSubmit}>\n  <div className={classes.control}>\n    <label htmlFor='title'>address</label>\n    <input type='text' id='address' value={postData.address} onChange={(e) => setPostData({ ...postData, address: e.target.value})}/>\n  </div>\n  <div className={classes.control}>\n    <label >add photos</label>\n    <div>\n    <div className=\"container-buttons\">\n\n    <input multiple onChange={fileSelected} type=\"file\" accept=\"image/*\"></input>\n\n          \n              </div>\n          </div>\n  </div>\n  <div className={classes.control}>\n    <label htmlFor='description'>any other things to add</label>\n    <textarea id='description'  rows='5' value={postData.description} onChange={(e) => setPostData({ ...postData, description: e.target.value })}></textarea>\n  </div>\n  <div className={classes.actions}>\n    <button>Add post</button>\n  </div>\n</form>\n    );\n}\nexport default Post;","/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} imageSrc - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n * @param {number} rotation - optional rotation parameter\n */\n\nconst createImage = (url) =>\n\tnew Promise((resolve, reject) => {\n\t\tconst image = new Image();\n\t\timage.addEventListener(\"load\", () => resolve(image));\n\t\timage.addEventListener(\"error\", (error) => reject(error));\n\t\timage.setAttribute(\"crossOrigin\", \"anonymous\"); // needed to avoid cross-origin issues on CodeSandbox\n\t\timage.src = url;\n\t});\n\nfunction getRadianAngle(degreeValue) {\n\treturn (degreeValue * Math.PI) / 180;\n}\n\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n\tconst image = await createImage(imageSrc);\n\tconst canvas = document.createElement(\"canvas\");\n\tconst ctx = canvas.getContext(\"2d\");\n\t\n\tconst maxSize = Math.max(image.width, image.height);\n\tconst safeArea = 2 * ((maxSize / 2) * Math.sqrt(2));\n\n\t// set each dimensions to double largest dimension to allow for a safe area for the\n\t// image to rotate in without being clipped by canvas context\n\tcanvas.width = safeArea;\n\tcanvas.height = safeArea;\n\n\t// translate canvas context to a central location on image to allow rotating around the center.\n\tctx.translate(safeArea / 2, safeArea / 2);\n\tctx.rotate(getRadianAngle(rotation));\n\tctx.translate(-safeArea / 2, -safeArea / 2);\n\n\t// draw rotated image and store data.\n\tctx.drawImage(\n\t\timage,\n\t\tsafeArea / 2 - image.width * 0.5,\n\t\tsafeArea / 2 - image.height * 0.5\n\t);\n\n\tconst data = ctx.getImageData(0, 0, safeArea, safeArea);\n\n\t// set canvas width to final desired crop size - this will clear existing context\n\tcanvas.width = pixelCrop.width;\n\tcanvas.height = pixelCrop.height;\n\n\t// paste generated rotate image with correct offsets for x,y crop values.\n\tctx.putImageData(\n\t\tdata,\n\t\t0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x,\n\t\t0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y\n\t);\n\n\t// As Base64 string\n\t// return canvas.toDataURL(\"image/jpeg\");\n\treturn canvas;\n}\n\nexport const generateDownload = async (imageSrc, crop) => {\n\tif (!crop || !imageSrc) {\n\t\treturn;\n\t}\n\n\tconst canvas = await getCroppedImg(imageSrc, crop);\n\n\tcanvas.toBlob(\n\t\t(blob) => {\n\t\t\tconst previewUrl = window.URL.createObjectURL(blob);\n\n\t\t\tconst anchor = document.createElement(\"a\");\n\t\t\tanchor.download = \"image.jpeg\";\n\t\t\tanchor.href = URL.createObjectURL(blob);\n\t\t\tanchor.click();\n\n\t\t\twindow.URL.revokeObjectURL(previewUrl);\n\t\t},\n\t\t\"image/jpeg\",\n\t\t0.66\n\t);\n};\n","import { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\n\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\nconst ENDPOINT = 'https://univinfosdp.herokuapp.com'; \nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n\n\n  const sendMessage = async (event) => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  \n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n\n    selectedChatCompare = selectedChat;\n    // eslint-disable-next-line\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            <IconButton\n              d={{ base: \"flex\", md: \"none\" }}\n              icon={<ArrowBackIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n            {messages &&\n              (!selectedChat.isGroupChat ? (\n                <>\n                  {getSender(user, selectedChat.users)}\n                  <ProfileModal\n                    user={getSenderFull(user, selectedChat.users)}\n                  />\n                </>\n              ) : (\n                <>\n                  {selectedChat.chatName.toUpperCase()}\n                  <UpdateGroupChatModal\n                    fetchMessages={fetchMessages}\n                    fetchAgain={fetchAgain}\n                    setFetchAgain={setFetchAgain}\n                  />\n                </>\n              ))}\n          </Text>\n          <Box\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    // height={50}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                variant=\"filled\"\n                bg=\"#E0E0E0\"\n                placeholder=\"Enter a message..\"\n                value={newMessage}\n                onChange={typingHandler}\n              />\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","import React, { useState, useEffect } from 'react';\nimport Card from '../ui/Card';\nimport classes from './NewPost.module.css';\nimport { Typography, Paper,Button } from '@material-ui/core';\n\nimport InputBase from '@material-ui/core/InputBase';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport useStyles from './styles';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Post from './Post';\n\n\n\n\n\n\n\n\n\nconst NewPost = ({ currentId, setCurrentId, user, setUser }) => {\n  \n  const post = useSelector((state) => (currentId ? state.posts.find((description) => description._id === currentId) : null));\n\n  const [postData, setPostData] = useState({selectedFile: '', description: '', username: ''});\n\n  const [username, setUserName] = useState(\"\");\n  useEffect(async () => {\n    setUserName(\n      await JSON.parse(localStorage.getItem(\"userInfo\")\n      )\n    );\n  }, []);\n\n  \n  \n    useEffect(() => {\n      if (post) setPostData(post);\n    }, [post]);\n\n  if (!username) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign IIn to create your own memories and like other's memories.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  return (\n    <>\n      <Card>\n  <Post currentId={currentId} setCurrentId={setCurrentId} user={user} setUser={setUser}/>\n  </Card>\n  </>\n  );\n}\n\nexport default NewPost;\n","import { makeStyles } from '@material-ui/core/styles';\nimport { deepPurple } from '@material-ui/core/colors';\n\nexport default makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 15,\n    margin: '30px 0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px 50px',\n  },\n  heading: {\n    color: 'rgba(0,183,255, 1)',\n    textDecoration: 'none',\n  },\n  image: {\n    marginLeft: '15px',\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    width: '400px',\n  },\n  profile: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '400px',\n  },\n  userName: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  brandContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n}));\n","import React, { useState, useEffect } from 'react';\n\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\n\nimport classes from './MainNavigation.module.css'\n\nimport { Link, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n//import decode from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\n\nimport * as actionType from '../../constants/actionTypes';\nimport useStyles from './styles';\n\nconst Navbar = (props ) => {\n  const navigate = useNavigate()\n  const [username, setUserName] = useState(\"\");\n  useEffect(async () => {\n    setUserName(\n      await JSON.parse(localStorage.getItem(\"userInfo\")\n      )\n    );\n  }, [navigate]);\n  \n  const dispatch = useDispatch();\n  const location = useLocation();\n  \n  const classess = useStyles();\n  \n  const logout = () => {\n    dispatch({ type: actionType.LOGOUT });\n    //localStorage.setItem(\"userInfo\", JSON.stringify(\"\"));\n    localStorage.removeItem(\"userInfo\");\n    //props.setUser(undefined);\n   // props.history.push(\"/Auth\");\n    navigate(\"/Auth\")\n    \n  };\n\n  useEffect(() => {\n    console.log(username + \"user\");\n  }, []);\n  \n  \n// useEffect(() => {\n//     const token = props.user?.token;\n\n//     if (token) {\n//       const decodedToken = decode(token);\n\n//       if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n//     }\n\n//     props.setUser(JSON.parse(localStorage.getItem('name')));\n//   }, [location]);\n\nconst stringifiedPerson = localStorage.getItem(\"name\");\nconst personAsObjectAgain = JSON.parse(stringifiedPerson);\n\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>univinfo</div>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/Blog\">Post Page</Link>\n          </li>\n          <li>\n            <Link to=\"/NewPost\">Add Post</Link>\n          </li>\n          <li>\n            <Link to=\"/MyPost\">My Post</Link>\n          </li>\n          <li>\n            <Link to=\"/Chats\">Chat</Link>\n          </li>\n          {/* <li>\n            <Link to='/checkout'>checkout</Link>\n          </li> */}\n          <li>\n          \n          {username ? (\n          <div className={classess.profile}>\n            {/* <Avatar className={classess.purple} alt={user?.result.name} src={user?.result.imageUrl}>{user?.result.name.charAt(0)}</Avatar>\n            <Typography className={classess.userName} variant=\"h6\">{user?.result.name}</Typography> */}\n            <Button variant=\"contained\" className={classess.logout} color=\"secondary\" onClick={logout}>Logout</Button>\n          </div>\n        ) : (\n          \n          <Button component={Link} to=\"/Auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\n        )}\n          </li>\n\n\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default Navbar;","export const isSameSenderMargin = (messages, m, i, userId) => {\n  // console.log(i === messages.length - 1);\n\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n\nexport const getSender = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\n};\n\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  IconButton,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\nconst ProfileModal = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n      )}\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent h=\"410px\">\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {user.name}\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"150px\"\n              src={user.pic}\n              alt={user.name}\n            />\n            <Text\n              fontSize={{ base: \"28px\", md: \"30px\" }}\n              fontFamily=\"Work sans\"\n            >\n              username: {user.username}\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileModal;\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\n//import { useHistory } from \"react-router-dom\";\nimport { Navigate, useNavigate } from 'react-router-dom';\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n\n  //const history = useHistory();\n  const navigate = useNavigate()\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n  }, [navigate]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        setUser,\n        notification,\n        setNotification,\n        chats,\n        setChats,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: \"flex\" }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n            )}\n            <span\n              style={{\n                backgroundColor: `${\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\n                }`,\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",\n              }}\n            >\n              {m.content}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Badge } from \"@chakra-ui/layout\";\n\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\n  return (\n    <Badge\n      px={2}\n      py={1}\n      borderRadius=\"lg\"\n      m={1}\n      mb={2}\n      variant=\"solid\"\n      fontSize={12}\n      colorScheme=\"purple\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n    >\n      {user.name}\n      {admin === user._id && <span> (Admin)</span>}\n      <CloseIcon pl={1} />\n    </Badge>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nconst UserListItem = ({ handleFunction }) => {\n  const { user } = ChatState();\n\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"lg\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>username : </b>\n          {user.username}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n\n      console.log(data._id);\n      // setSelectedChat(\"\");\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleAddUser = async (user1) => {\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  return (\n    <>\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {selectedChat.chatName}\n          </ModalHeader>\n\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\n              {selectedChat.users.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  admin={selectedChat.groupAdmin}\n                  handleFunction={() => handleRemove(u)}\n                />\n              ))}\n            </Box>\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                ml={1}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n\n            {loading ? (\n              <Spinner size=\"lg\" />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => handleAddUser(user)}\n                />\n              ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\n              Leave Group\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","import { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport SingleChat from \"./SingleChat\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"68%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from \"@chakra-ui/layout\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst GroupChatModal = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const { user, chats, setChats } = ChatState();\n\n  const handleGroup = (userToAdd) => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const handleDelete = (delUser) => {\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n  };\n\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: \"Please fill all the feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(\n        `/api/chat/group`,\n        {\n          name: groupChatName,\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\n        },\n        config\n      );\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            Create Group Chat\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <FormControl>\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n              {selectedUsers.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => handleDelete(u)}\n                />\n              ))}\n            </Box>\n            {loading ? (\n              // <ChatLoading />\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 4)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleGroup(user)}\n                  />\n                ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\n              Create Chat\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModal;\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst MyChats = ({ fetchAgain }) => {\n  const [loggedUser, setLoggedUser] = useState();\n\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"31%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        My Chats\n        <GroupChatModal>\n          <Button\n            d=\"flex\"\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n            rightIcon={<AddIcon />}\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModal>\n      </Box>\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"white\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n              >\n                <Text>\n                  {!chat.isGroupChat\n                    ? getSender(loggedUser, chat.users)\n                    : chat.chatName}\n                </Text>\n                {chat.latestMessage && (\n                  <Text fontSize=\"xs\">\n                    <b>{chat.latestMessage.sender.name} : </b>\n                    {chat.latestMessage.content.length > 50\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                      : chat.latestMessage.content}\n                  </Text>\n                )}\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\n//import { useHistory } from \"react-router-dom\";\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport ChatLoading from \"../ChatLoading\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport ProfileModal from \"./ProfileModal\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    chats,\n    setChats,\n  } = ChatState();\n\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  //const history = useHistory();\n  const navigate = useNavigate()\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    navigate(\"/Auth\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n    console.log(userId);\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" onClick={onOpen}>\n            <i className=\"fas fa-search\"></i>\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n              Search User\n            </Text>\n          </Button>\n        </Tooltip>\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\n          univ info\n        </Text>\n        <div>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} />\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\n              <Avatar\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n              />\n            </MenuButton>\n            <MenuList>\n              <ProfileModal user={user}>\n                <MenuItem>My Profile</MenuItem>{\" \"}\n              </ProfileModal>\n              <MenuDivider />\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or username\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChat(user._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","import { Box } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport Chatbox from \"../components/Chatbox\";\nimport MyChats from \"../components/MyChats\";\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatpage = () => {\n  const [fetchAgain, setFetchAgain] = useState(false);\n  const { user } = ChatState();\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {user && <SideDrawer />}\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\n        {user && <MyChats fetchAgain={fetchAgain} />}\n        {user && (\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default Chatpage;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/react\";\n//import { useHistory } from \"react-router-dom\";\nimport { Navigate, useNavigate } from 'react-router-dom';\nconst Login = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n\n  //const history = useHistory();\n  const navigate = useNavigate()\n\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!username || !password) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n\n    // console.log(email, password);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user/login\",\n        { username, password },\n        config\n      );\n\n      // console.log(JSON.stringify(data));\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setLoading(false);\n      navigate(\"/blog\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <VStack spacing=\"10px\">\n      <FormControl id=\"username\" isRequired>\n        <FormLabel>username</FormLabel>\n        <Input\n          value={username}\n          // type=\"email\"\n          placeholder=\"username\"\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter password\"\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Login\n      </Button>\n      <Button\n        variant=\"solid\"\n        colorScheme=\"red\"\n        width=\"100%\"\n        onClick={() => {\n          setUsername(\"guest@example.com\");\n          setPassword(\"123456\");\n        }}\n      >\n        Get Guest User Credentials\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Login;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n//import { useHistory } from \"react-router\";\nimport { Navigate, useNavigate } from 'react-router-dom';\nconst Signup = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  //const history = useHistory();\n    const navigate = useNavigate()\n  const [name, setName] = useState();\n  const [username, setUsername] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const submitHandler = async () => {\n    setPicLoading(true);\n    if (!name || !username || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(name, username, password, pic);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        \"/api/user\",\n        {\n          name,\n          username,\n          password,\n          pic,\n        },\n        config\n      );\n      console.log(data);\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setPicLoading(false);\n      navigate(\"/blog\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n    }\n  };\n\n  const postDetails = (pics) => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(pics);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(data.url.toString());\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  return (\n    <VStack spacing=\"5px\">\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"username\" isRequired>\n        <FormLabel>username</FormLabel>\n        <Input\n          type=\"username\"\n          placeholder=\"username\"\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Confirm Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Confirm password\"\n            onChange={(e) => setConfirmpassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"pic\">\n        <FormLabel>Upload your Picture</FormLabel>\n        <Input\n          type=\"file\"\n          p={1.5}\n          accept=\"image/*\"\n          onChange={(e) => postDetails(e.target.files[0])}\n        />\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={picLoading}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Signup;\n","import {\n  Box,\n  Container,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\n//import { useHistory } from \"react-router\";\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport Login from \"../components/Authentication/Login\";\nimport Signup from \"../components/Authentication/Signup\";\n\nfunction Homepage() {\n  //const history = useHistory();\n  const navigate = useNavigate()\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n  }, [navigate]);\n\n  return (\n    <Container maxW=\"xl\" centerContent>\n      <Box\n        d=\"flex\"\n        justifyContent=\"center\"\n        p={3}\n        bg=\"white\"\n        w=\"100%\"\n        m=\"40px 0 15px 0\"\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n      >\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\">\n          univinfo\n        </Text>\n      </Box>\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\n        <Tabs isFitted variant=\"soft-rounded\">\n          <TabList mb=\"1em\">\n            <Tab>Login</Tab>\n            <Tab>Sign Up</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Login />\n            </TabPanel>\n            <TabPanel>\n              <Signup />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Homepage;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Grow, Grid, Button } from '@material-ui/core';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { getPosts } from '../../actions/posts';\nimport NewPost from '../postComponents/NewPost.js';\nimport PostList from '../postComponents/PostList.js';\n//import AllMeetupsPage from '../../pages/AllMeetups';\n//import Layout from '../layout/NewLayout';\nimport Navbar from '../Navbar/Navbar';\n//import Auth from '../Auth/Auth.js';\n//import { getUsers } from '../../actions/posts';\nimport MyPost from '../postComponents/MyPost';\n//import Chat from '../../pages/Chat';\nimport Chatpage from '../../Pages/Chatpage';\nimport Homepage from '../../Pages/Homepage';\n\n//import SetAvatar from '../SetAvatar';\n\n\n\nconst Home = (props ) => {\n  //const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"name\")));\n\n  const [username, setUserName] = useState(\"\");\n  useEffect(async () => {\n    setUserName(\n      await JSON.parse(localStorage.getItem(\"userInfo\")\n      )\n    );\n  }, []);\n  const [currentId, setCurrentId] = useState(0);\n  const dispatch = useDispatch();\n  \n  //  useEffect(() => {\n  //   dispatch(getUsers());\n  // }, [currentId, dispatch]);\n\n  useEffect(async() => {\n      dispatch(getPosts());\n  }, [currentId, dispatch]);\n  \n  \n\n  return (\n    \n    \n    \n    \n<div>\n            <Navbar user={username} setUser={setUserName} />\n            <Routes>\n\n              <Route path=\"Auth\" element={<Homepage />}/>  \n             <Route path=\"Blog\" element={<PostList currentId={props.currentId} setCurrentId={props.setCurrentId} user={username} setUser={setUserName}/>}/> \n            \n            <Route path=\"NewPost\" element={<NewPost currentId={props.currentId} setCurrentId={props.setCurrentId} user={username} setUser={setUserName}/>}/>\n           \n            <Route path=\"MyPost\" element={<MyPost currentId={props.currentId} setCurrentId={props.setCurrentId} user={username} setUser={setUserName}/>}/> \n            {/* <Route path=\"SetAvatar\" element={<SetAvatar/>}/> */}\n            <Route path= \"chats\" element={<Chatpage />} /> \n            </Routes>\n            </div>           \n             \n      \n      \n        \n      \n  );\n};\n\nexport default Home;\n","import React,{useState,useEffect} from \"react\";\nimport \"./App.css\";\n\nimport {BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport MyPost from \"./components/postComponents/MyPost\";\nimport PostList from \"./components/postComponents/PostList\";\nimport NewPost from \"./components/postComponents/NewPost\";\nimport Home from \"./components/Home/Home\";\nimport Homepage from \"./Pages/Homepage\";\nimport Navbar from \"./components/Navbar/Navbar\";\nfunction App() {\n\n  const [username, setUserName] = useState(\"\");\n  useEffect(async () => {\n    setUserName(\n      await JSON.parse(localStorage.getItem(\"userInfo\")\n      )\n    );\n  }, []);\n\n  \n  const [currentId, setCurrentId] = useState(0);\n  return (\n    <div className=\"App\">\n            <Routes>\n        {/* <Route path=\"/\" element={<Homepage />}/> */}\n      \n        <Route path=\"/*\" element={<Home currentId={currentId} setCurrentId={setCurrentId} />}/>\n\n\n        {/* <Route path=\"/Auth\" element={<Homepage />}/>  \n             <Route path=\"/Blog\" element={<PostList currentId={currentId} setCurrentId={setCurrentId} user={username} setUser={setUserName}/>}/> \n            \n            <Route path=\"/NewPost\" element={<NewPost currentId={currentId} setCurrentId={setCurrentId} user={username} setUser={setUserName}/>}/>\n           \n            <Route path=\"/MyPost\" element={<MyPost currentId={currentId} setCurrentId={setCurrentId} user={username} setUser={setUserName}/>}/>  */}\n      {/* <Route path=\"/chats\" element={<Chatpage />} /> */}\n      {/* <Route path=\"/Home/*\" element={<Home currentId={currentId} setCurrentId={setCurrentId} />}/>    */}\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\n\nimport posts from './posts';\n\nexport const reducers = combineReducers({ posts });\n","import { FETCH_ALL, CREATE, DELETE} from '../constants/actionTypes';\n\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    //case LIKE:\n    //  return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case CREATE:\n      return [...posts, action.payload];\n    //case UPDATE:\n    //  return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { reducers } from './reducers';\n\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n  <ChakraProvider>\n    <BrowserRouter>\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </BrowserRouter>\n  </ChakraProvider>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"PostItem_item__1Ei6G\",\"image\":\"PostItem_image__29Cln\",\"content\":\"PostItem_content__3lUkG\",\"actions\":\"PostItem_actions__1Q2Wp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewPost_form__13Wgk\",\"control\":\"NewPost_control__1MZL7\",\"actions\":\"NewPost_actions__tGvtD\"};"],"sourceRoot":""}